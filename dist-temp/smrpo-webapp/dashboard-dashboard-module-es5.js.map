{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","webpack:///src/app/dashboard/add-user/add-user.component.ts","webpack:///src/app/dashboard/add-user/add-user.component.html","webpack:///src/app/dashboard/boards/boards.component.ts","webpack:///src/app/dashboard/boards/boards.component.html","webpack:///src/app/dashboard/dashboard-routing.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/dashboard/material.ts","webpack:///src/app/interfaces/user.interface.ts","webpack:///src/app/services/admin.service.ts","webpack:///src/utils/custom-validators.ts"],"names":["DataSource","isDataSource","value","connect","ArrayDataSource","_data","CollectionViewer","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","length","forEach","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","has","size","isEmpty","predicate","selected","_selected","sort","next","source","added","removed","add","push","getMultipleValuesInSingleSelectionError","Array","from","SelectionChange","Error","UniqueSelectionDispatcher","_listeners","id","name","listener","filter","registered","ɵfac","UniqueSelectionDispatcher_Factory","t","ɵprov","factory","token","providedIn","type","args","TreeDataNodeFlattener","DragCSSStyleDeclaration","extendStyles","dest","key","hasOwnProperty","toggleNativeDragInteractions","element","enable","userSelect","style","touchAction","webkitUserDrag","webkitTapHighlightColor","msUserSelect","webkitUserSelect","MozUserSelect","parseCssTimeUnitsToMs","multiplier","toLowerCase","indexOf","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","getPropertyValue","split","map","part","trim","DragRefConfig","passiveEventListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","DragRefInternal","DragHelperTemplate","DragPreviewTemplate","Point","DragRef","_config","_document","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","x","y","_activeTransform","_moveEvents","_pointerMoveSubscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","asObservable","_pointerDown","event","targetHandle","handle","target","contains","disabled","_initializeDragSequence","_rootElement","_pointerMove","preventDefault","_hasStartedDragging","pointerPosition","_getPointerPositionOnPage","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","_endDragSequence","_dropContainer","isDragging","run","_startDragSequence","_previewRect","width","height","_preview","getBoundingClientRect","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","SVGElement","appliedTransform","setAttribute","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","withRootElement","registerDragItem","_placeholder","getPlaceholderElement","getRootElement","handles","_toggleNativeDragInteractions","template","_previewTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","addEventListener","_initialTransform","undefined","boundaryElement","unsubscribe","change","subscribe","_containInsideBoundaryOnResize","removeNode","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","clear","transform","direction","container","position","_pointerPositionAtLastDirectionChange","_previewRef","destroy","_placeholderRef","stopDragging","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","isTouchEvent","_lastTouchEventTime","parent","parentNode","preview","_createPreviewElement","placeholder","_createPlaceholderElement","anchor","createComment","insertBefore","display","body","appendChild","replaceChild","getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","draggable","pointerMove","pointerUp","scroll","pipe","_scrollPosition","getViewportScrollPosition","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","startDragging","currentIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","newContainer","_getSiblingContainerFromPosition","exit","enter","_startScrollingIfNecessary","_sortItem","getTransform","previewConfig","previewClass","viewRef","viewContainer","createEmbeddedView","context","getRootNode","matchElementSize","deepCloneNode","pointerEvents","margin","top","left","zIndex","classList","isArray","className","Promise","resolve","placeholderRect","duration","runOutsideAngular","handler","propertyName","removeEventListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","elementRect","handleElement","referenceRect","point","targetTouches","pageX","pageY","touches","changedTouches","constrainedPoint","constrainPosition","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewRect","minY","maxY","bottom","minX","maxX","right","clamp","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","setFreeDragPosition","touch","mouse","newValue","round","node","clone","cloneNode","descendantsWithId","querySelectorAll","descendantCanvases","removeAttribute","i","cloneCanvases","correspondingCloneContext","getContext","drawImage","min","max","removeChild","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","rootNode","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","sourceRect","moveItemInArray","array","fromIndex","toIndex","clamp$1","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","AUTO_SCROLL_STEP","CachedItemPosition","ScrollPosition","AutoScrollVerticalDirection","NONE","UP","DOWN","AutoScrollHorizontalDirection","LEFT","RIGHT","DropListRefInternal","DropListRef","sortingDisabled","autoScrollDisabled","enterPredicate","sorted","_isDragging","_itemPositions","_parentPositions","Map","_previousSwap","drag","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_cachedShadowRoot","_startScrollInterval","_scrollNode","incrementVerticalScroll","incrementHorizontalScroll","withScrollableParents","registerDropContainer","removeDropContainer","styles","_initialScrollSnap","msScrollSnapType","scrollSnapType","_cacheItems","sibling","_startReceiving","_listenToScrollEvents","pointerX","pointerY","index","newIndex","_draggables","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","parentElement","_cacheItemPositions","_reset","items","_withDropContainer","connectedTo","slice","orientation","elements","_scrollableElements","reverse","findIndex","currentItem","pointerDelta","isPointerNearClientRect","_clientRect","siblings","isHorizontal","siblingAtNewPosition","clientRect","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","isDraggedItem","offset","elementToOffset","adjustClientRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","window","set","scrollPosition","getMutableClientRect","scrollTop","scrollLeft","elementToMeasure","getVisibleElement","a","b","_stopReceiving","immediateSibling","end","_","floor","_cacheParentPositions","scrolledParent","newTop","newLeft","get","topDifference","leftDifference","_sortFromLastPointerPosition","isInsideClientRect","_canReceive","elementFromPoint","_getShadowRoot","nativeElement","activeSiblings","_updateAfterScroll","isReceiving","getShadowRoot","rect","xThreshold","yThreshold","amount","scrollBy","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","ShadowRoot","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_preventDefaultWhileDragging","startsWith","moveEvent","upEvent","e","options","config","_clearGlobalListeners","instance","DragDropRegistry_Factory","ctorParameters","decorators","DEFAULT_CONFIG","DragDrop","DragDrop_Factory","CdkDragStart","CdkDragRelease","CdkDragEnd","CdkDragEnter","CdkDragExit","CdkDragDrop","CdkDragMove","CdkDragSortEvent","CDK_DRAG_PARENT","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CdkDragHandle_Factory","ɵdir","selectors","hostAttrs","inputs","propDecorators","selector","host","CdkDragPlaceholder","templateRef","CdkDragPlaceholder_Factory","data","CdkDragPreview","_matchSize","CdkDragPreview_Factory","CDK_DRAG_CONFIG","DragDropConfig","CDK_DRAG_CONFIG_FACTORY","CDK_DROP_LIST","CdkDrag","dropContainer","_viewContainerRef","_dir","dragDrop","_changeDetectorRef","_destroyed","observer","subscription","_dragRef","movedEvent","createDrag","_assignDefaults","_dropListRef","addItem","_syncInputs","_handleEvents","reset","getFreeDragPosition","onStable","_updateRootElement","changes","childHandleElements","withHandles","handleInstance","dragRef","disableHandle","enableHandle","freeDragPosition","rootSelectorChange","positionChange","firstChange","removeItem","dispose","rootElementSelector","getClosestMatchingAncestor","nodeName","boundary","ref","dir","withBoundaryElement","_getBoundaryElement","withPlaceholderTemplate","withPreviewTemplate","withDirection","emit","markForCheck","draggingDisabled","CdkDrag_Factory","contentQueries","CdkDrag_ContentQueries","rf","ctx","dirIndex","_t","first","hostVars","hostBindings","CdkDrag_HostBindings","outputs","exportAs","features","provide","useExisting","descendants","providers","currentElement","matches","msMatchesSelector","CdkDropListGroup","_items","CdkDropListGroup_Factory","_uniqueIdCounter","CdkDropListInternal","ɵ0","CdkDropList","_group","_scrollDispatcher","_unsortedItems","createDropList","_setupInputSyncSubscription","_dropLists","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","_syncItemsWithRef","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","list","withOrientation","listAutoScrollDisabled","listOrientation","withItems","getSortedItems","CdkDropList_Factory","CdkDropList_HostBindings","useValue","DragDropModule","ɵmod","ɵinj","DragDropModule_Factory","ngJitMode","declarations","exports","BlockScrollStrategy","document","_previousHTMLStyles","_isEnabled","_canBeEnabled","root","documentElement","_previousScrollPosition","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","viewport","ScrollStrategy","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategyConfig","CloseScrollStrategy","_detach","disable","_overlayRef","hasAttached","detach","overlayRef","stream","scrolled","threshold","_initialScrollPosition","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","some","containerBounds","outsideAbove","outsideBelow","outsideLeft","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategyConfig","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","parentRects","ScrollStrategyOptions","noop","close","block","reposition","ScrollStrategyOptions_Factory","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","OriginConnectionPosition","OverlayConnectionPosition","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","overlays","_keydownEventSubscriptions","_keydownEvents","_isAttached","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","_platform","_containerElement","_createContainer","isBrowser","containerClass","oppositePlatformContainers","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_keydownEventsObservable","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","_togglePointerEvents","_attachBackdrop","_toggleClasses","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","strategy","sizeConfig","assign","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","showingClass","requestAnimationFrame","nextSibling","backdropToDetach","timeoutId","finishDetach","cssClasses","isAdd","cssClass","children","OverlaySizeConfig","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","alignItems","justifyContent","lastPosition","scrollables","positions","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","_transformOriginSelector","startX","_isRtl","endX","overlayStartX","overlayStartY","_getOffset","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","overflowRight","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","_hasExactPosition","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","horizontalStyleProperty","documentWidth","originBounds","overlayBounds","scrollContainerBounds","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","HTMLElement","OverlayFit","FallbackPosition","BoundingBoxRect","FlexibleFit","ConnectedPosition","destination","input","units","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","CdkConnectedOverlay","_overlay","viewContainerRef","scrollStrategyFactory","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","overlayKeydown","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","create","_buildConfig","keydownEvents","keyCode","_createPositionStrategy","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","_createOverlay","CdkConnectedOverlay_Factory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OverlayModule_Factory","imports","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","FullscreenOverlayContainer_Factory","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","ComponentType","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","TemplatePortal","DomPortal","PortalOutlet","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_defaultInjector","anchorNode","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","attachView","hostView","detachView","_getComponentRootNode","detectChanges","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","CdkPortalOutlet","_isInitialized","attached","_getRootNode","_attachedRef","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","VirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","viewportSize","dataLength","startBuffer","expandStart","ceil","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","deregister","ancestors","scrollingContainers","_subscription","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_elementScrolled","register","el","_applyScrollToOptions","scrollTo","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportScrollPosition","ViewportRuler","_change","_invalidateCache","_updateViewportSize","_viewportSize","output","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_detachedSubject","_renderedRangeSubject","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","encapsulation","changeDetection","None","OnPush","getSize","CdkVirtualForOf","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","view","j","diff","_renderedItems","_updateContext","_applyChanges","cdkVirtualForTrackBy","oldDs","newDs","disconnect","count","_updateComputedContextProperties","forEachOperation","record","adjustedPreviousIndex","_insertViewForNewItem","$implicit","_cacheView","_detachView","move","forEachIdentityChange","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","prototype","call","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","ScrollingModule","ScrollingModule_Factory","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","MatCard_HostBindings","MatCard_Template","String","MatCardHeader","MatCardHeader_Factory","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","MatDivider","_vertical","_inset","MatDivider_Factory","MatDivider_HostBindings","vertical","inset","MatDivider_Template","MatDividerModule","MatDividerModule_Factory","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","IconOptions","SvgIconConfig","svgElement","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","sanitizedLiteral","sanitize","HTML","_createSvgElementForSingleIcon","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","_svgElementFromString","alias","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","iconKey","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","message","handleError","console","error","foundIcon","_extractSvgIconFromSet","_fetchUrl","svgText","responseText","_setSvgAttributes","iconSet","iconSource","querySelector","iconElement","_toSvgElement","str","div","innerHTML","attributes","childNodes","viewBox","inProgressFetch","req","responseType","configNamespace","MatIconRegistry_Factory","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","MatIconBase","_elementRef","_MatIconMixinBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","MatIconLocation","location","getPathname","pathname","search","funcIriAttributes","attr","funcIriAttributeSelector","join","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","parts","svgIconChanges","svgIcon","_splitIconName","getNamedSvgIcon","_setSvgElement","previousValue","_clearSvgElement","_usingFontIcon","_updateFontIconClasses","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","styleTags","textContent","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","fontIcon","_previousFontIconClass","attrs","elementsWithFuncIri","elementWithReference","getAttribute","match","inline","_fontSet","_cleanupFontValue","_fontIcon","MatIcon_Factory","MatIcon_HostBindings","color","MatIcon_Template","MatIconModule","MatIconModule_Factory","MatListOption_mat_pseudo_checkbox_2_Template","ctx_r158","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MatNavList","arguments","MatNavList_Factory","ɵMatNavList_BaseFactory","disableRipple","MatNavList_Template","MatList","_getListType","MatList_Factory","MatList_Template","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","_element","navList","_isInteractiveList","_list","_getHostElement","hasAttribute","_lines","MatListItem_Factory","MatListItem_ContentQueries","_avatar","_icon","MatListItem_HostBindings","MatListItem_Template","_isRippleDisabled","directives","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","multi","MatSelectionListChange","option","MatListOption","_changeDetector","selectionList","_hasFocus","checkboxPosition","_inputsInitialized","_value","compareWith","_setSelected","wasSelected","hadFocus","newActiveItem","_removeOptionFromList","focus","_text","multiple","toggle","_setFocusedOption","_onTouched","selectedOptions","_color","_reportValueChange","MatListOption_Factory","MatListOption_ContentQueries","MatListOption_Query","MatListOption_HostBindings","MatListOption_focus_HostBindingHandler","_handleFocus","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","_handleClick","MatListOption_Template","tabIndex","_contentInitialized","selectionChange","a1","a2","_tabIndex","_onChange","_keyManager","withWrap","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","_updateTabIndex","disableRippleChanges","colorChanges","_markOptionsForCheck","_isDestroyed","_setAllOptionsSelected","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","activeItem","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","setFirstItemActive","setLastItemActive","selectAll","deselectAll","onKeydown","shiftKey","_getSelectedOptionValues","activeIndex","setActiveItem","isDisabled","correspondingOption","focusedIndex","_isValidIndex","focusedOption","toArray","hasChanged","_markForCheck","MatSelectionList_Factory","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_focus_HostBindingHandler","_onFocus","MatSelectionList_blur_HostBindingHandler","MatSelectionList_keydown_HostBindingHandler","$event","_keydown","toString","MatSelectionList_Template","MatListModule","MatListModule_Factory","_MatMenu_ng_template_0_Template","_r146","_MatMenu_ng_template_0_Template_div_keydown_0_listener","ctx_r145","_handleKeydown","_MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r147","closed","_MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r148","_onAnimationStart","_MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r149","_onAnimationDone","ctx_r144","panelId","_classList","_panelAnimationState","ariaLabel","ariaLabelledby","ariaDescribedby","matMenuAnimations","transformMenu","opacity","fadeInItems","MatMenuContent","_attached","_portal","_outlet","MatMenuContent_Factory","throwMatMenuMissingError","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_PANEL","MatMenuPanel","MatMenuItemBase","_MatMenuItemMixinBase","MatMenuItem","_focusMonitor","_parentMenu","role","_hovered","_focused","_highlighted","_triggersSubmenu","monitor","focusVia","stopMonitoring","textNodeType","TEXT_NODE","MatMenuItem_Factory","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","_checkDisabled","MatMenuItem_mouseenter_HostBindingHandler","_handleMouseEnter","_getTabIndex","MatMenuItem_Template","MatMenuDefaultOptions","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","MAT_MENU_BASE_ELEVATION","menuPanelUid","_MatMenuBase","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_animationDone","_overlapTrigger","setPositionClasses","_updateDirectDescendants","focusedItem","itemChanges","_item","parentMenu","setFocusOrigin","lazyContent","_focusFirstItem","depth","elevation","newElevation","customElevation","c","_previousElevation","posX","posY","_isAnimating","toState","_allItems","notifyOnChanges","previousPanelClass","_previousPanelClass","_MatMenuBase_Factory","_MatMenuBase_ContentQueries","_MatMenuBase_Query","MatMenu","MatMenu_Factory","ɵMatMenu_BaseFactory","_MatMenu","defaultOptions","_MatMenu_Factory","_MatMenu_Template","animation","animations","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","MatMenuTrigger","_menuItemInstance","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","triggersSubmenu","_checkMenu","_handleHover","closeMenu","openMenu","_setPosition","menu","_getPortal","menuData","_menuClosingActions","_initMenu","_startAnimation","menuOpen","_restoreFocus","_resetAnimation","_setIsMenuOpen","_setMenuElevation","focusFirstItem","setElevation","isOpen","_getOverlayConfig","_subscribeToPositions","originFallbackX","overlayFallbackY","originFallbackY","overlayFallbackX","backdrop","detachments","parentClose","hover","active","toggleMenu","v","_menu","reason","_destroyMenu","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","_handleMousedown","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","_MatMenuDirectivesModule_Factory","MatMenuModule","MatMenuModule_Factory","MatSelect_span_4_Template","ctx_r135","MatSelect_span_5_span_1_Template","ctx_r138","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r136","customTrigger","MatSelect_ng_template_8_Template","_r142","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","ctx_r141","_panelDoneAnimatingStream","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r143","ctx_r137","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","optional","transformPanel","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_parentFormField","_liveAnnouncer","defaults","_panelOpen","_required","_scrollTop","_compareWith","o1","o2","_uid","_destroy","_optionIds","_positions","_disableOptionCentering","controlType","optionSelectionChanges","onSelectionChange","openedChange","_openedStream","o","_closedStream","valueChange","valueAccessor","parseInt","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","stateChanges","panelOpen","overlayDir","_triggerRect","trigger","_initKeyManager","_resetOptions","_initializeSelection","updateErrorState","_typeaheadDebounceInterval","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","_setSelectionByValue","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","altKey","previouslySelectedOption","selectedOption","announce","viewValue","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","_calculateOverlayOffsetX","panel","_selectValue","_sortValues","warn","withVerticalOrientation","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_setOptionIds","_propagateChanges","sortComparator","fallbackValue","valueToEmit","empty","activeOptionIndex","labelCount","optionGroups","_getItemHeight","result","current","itemHeight","_getItemCount","panelHeight","scrollContainerHeight","maxScroll","selectedOptionOffset","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_hasFloatingLabel","_getAriaLabel","_labelId","paddingWidth","group","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","ids","_ariaDescribedby","writeValue","_id","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","required","errorState","_getAriaActiveDescendant","errorStateMatcher","MatSelect_Template","MatSelect_Template_div_click_0_listener","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r133","MatSelectModule","MatSelectModule_Factory","MatDrawerContainer_div_0_Template","_r153","MatDrawerContainer_div_0_Template_div_click_0_listener","ctx_r152","_onBackdropClicked","ctx_r150","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","_r157","MatSidenavContainer_div_0_Template_div_click_0_listener","ctx_r156","ctx_r154","MatSidenavContainer_mat_sidenav_content_3_Template","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","_contentMarginChanges","MatDrawerContent_Factory","MatDrawerContainer","MatDrawerContent_HostBindings","_contentMargins","MatDrawerContent_Template","MatDrawer","_focusTrapFactory","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","onPositionChanged","_modeChanged","opened","activeElement","_takeFocus","disableClose","fromState","autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","activeEl","_openedVia","blur","_updateFocusTrapState","openedVia","enabled","mode","_autoFocus","MatDrawer_Factory","MatDrawer_HostBindings","MatDrawer_animation_transform_start_HostBindingHandler","_animationStartListener","MatDrawer_animation_transform_done_HostBindingHandler","_animationDoneListener","openedStart","closedStart","MatDrawer_Template","defaultAutosize","_drawers","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_start","_end","_left","_right","_setContainerClass","onMicrotaskEmpty","_closeModalDrawer","_canHaveBackdrop","_backdropOverride","_userContent","_content","MatDrawerContainer_Factory","MatDrawerContainer_ContentQueries","MatDrawerContainer_Query","MatDrawerContainer_HostBindings","autosize","MatDrawerContainer_Template","MatSidenavContent","changeDetectorRef","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","MatSidenav_Factory","ɵMatSidenav_BaseFactory","MatSidenav_HostBindings","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenav_Template","MatSidenavContainer_Factory","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","MatToolbarBase","_MatToolbarMixinBase","MatToolbarRow","MatToolbarRow_Factory","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","COMMENT_NODE","throwToolbarMixedModesError","MatToolbar_Factory","MatToolbar_ContentQueries","MatToolbar_HostBindings","MatToolbar_Template","MatToolbarModule","MatToolbarModule_Factory","AddUserComponent","formbuilder","adminService","errorMatcher","LoginErrorStateMatcher","form","username","password","minLength","atLeastOneNumber","upperAndLowerLetters","firstName","lastName","email","USER","invalid","markAllAsTouched","usernameError","createUser","user","log","setErrors","sendData","templateUrl","styleUrls","control","touched","errors","BoardsComponent","l1","l2","l3","l4","routes","DashboardRoutingModule","forChild","DashboardComponent","rootStore","router","user$","userStore","clearSettings","navigate","onLogout","DashboardModule","MaterialModule","USER_ROLE","AdminService","http","post","CUSTOM_VALIDATORS","toUpperCase","noUpperAndLowerCase","test","noNumbers"],"mappings":"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","file":"dashboard-dashboard-module-es5.js","sourcesContent":["import { isObservable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\nif (false) {\n    /**\n     * Connects a collection viewer (such as a data-table) to this data source. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    DataSource.prototype.connect = function (collectionViewer) { };\n    /**\n     * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n     * to perform any clean-up or tear-down operations when a view is being destroyed.\n     *\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?}\n     */\n    DataSource.prototype.disconnect = function (collectionViewer) { };\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/array-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ArrayDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/collection-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n * @record\n */\nfunction CollectionViewer() { }\nif (false) {\n    /**\n     * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n     * data. The `start` index is inclusive, while the `end` is exclusive.\n     * @type {?}\n     */\n    CollectionViewer.prototype.viewChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\nif (false) {\n    /**\n     * Currently-selected values.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selection;\n    /**\n     * Keeps track of the deselected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._deselectedToEmit;\n    /**\n     * Keeps track of the selected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selectedToEmit;\n    /**\n     * Cache for the array value of the selected items.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selected;\n    /**\n     * Event emitted when the value has changed.\n     * @type {?}\n     */\n    SelectionModel.prototype.changed;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._emitChanges;\n}\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction SelectionChange() { }\nif (false) {\n    /**\n     * Model that dispatched the event.\n     * @type {?}\n     */\n    SelectionChange.prototype.source;\n    /**\n     * Options that were added to the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.added;\n    /**\n     * Options that were removed from the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.removed;\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/unique-selection-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\n/** @nocollapse */ UniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/tree-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n * @record\n * @template T\n */\nfunction TreeDataNodeFlattener() { }\nif (false) {\n    /**\n     * Transforms a set of hierarchical structured data into a flattened data array.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.flattenNodes = function (structuredData) { };\n    /**\n     * Expands a flattened array of data into its hierarchical form using the provided expansion\n     * model.\n     * @param {?} nodes\n     * @param {?} expansionModel\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.expandFlattenedNodes = function (nodes, expansionModel) { };\n    /**\n     * Put node descendants of node in array.\n     * If `onlyExpandable` is true, then only process expandable descendants.\n     * @param {?} node\n     * @param {?} nodes\n     * @param {?} onlyExpandable\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.nodeDescendents = function (node, nodes, onlyExpandable) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","import { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Directive, ElementRef, Optional, Input, TemplateRef, EventEmitter, isDevMode, SkipSelf, ViewContainerRef, ChangeDetectorRef, ContentChildren, ContentChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _supportsShadowDom } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { startWith, takeUntil, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-styling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extended CSSStyleDeclaration that includes a couple of drag-related\n * properties that aren't in the built-in TS typings.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction DragCSSStyleDeclaration() { }\nif (false) {\n    /** @type {?} */\n    DragCSSStyleDeclaration.prototype.webkitUserDrag;\n    /** @type {?} */\n    DragCSSStyleDeclaration.prototype.MozUserSelect;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = (/** @type {?} */ (source[key]));\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/transition-duration.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    /** @type {?} */\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    const computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    const property = transitionedProperties.find((/**\n     * @param {?} prop\n     * @return {?}\n     */\n    prop => prop === 'transform' || prop === 'all'));\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    /** @type {?} */\n    const propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map((/**\n     * @param {?} part\n     * @return {?}\n     */\n    part => part.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the behavior of DragRef.\n * @record\n */\nfunction DragRefConfig() { }\nif (false) {\n    /**\n     * Minimum amount of pixels that the user should\n     * drag, before the CDK initiates a drag sequence.\n     * @type {?}\n     */\n    DragRefConfig.prototype.dragStartThreshold;\n    /**\n     * Amount the pixels the user should drag before the CDK\n     * considers them to have changed the drag direction.\n     * @type {?}\n     */\n    DragRefConfig.prototype.pointerDirectionChangeThreshold;\n}\n/**\n * Options that can be used to bind a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Options that can be used to bind an active event listener.\n * @type {?}\n */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n * @type {?}\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Internal compile-time-only representation of a `DragRef`.\n * Used to avoid circular import issues between the `DragRef` and the `DropListRef`.\n * \\@docs-private\n * @record\n */\nfunction DragRefInternal() { }\n/**\n * Template that can be used to create a drag helper element (e.g. a preview or a placeholder).\n * @record\n * @template T\n */\nfunction DragHelperTemplate() { }\nif (false) {\n    /** @type {?} */\n    DragHelperTemplate.prototype.template;\n    /** @type {?} */\n    DragHelperTemplate.prototype.viewContainer;\n    /** @type {?} */\n    DragHelperTemplate.prototype.context;\n}\n/**\n * Template that can be used to create a drag preview element.\n * @record\n * @template T\n */\nfunction DragPreviewTemplate() { }\nif (false) {\n    /** @type {?|undefined} */\n    DragPreviewTemplate.prototype.matchSize;\n}\n/**\n * Point on the page or within an element.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * @template T\n */\nclass DragRef {\n    /**\n     * @param {?} element\n     * @param {?} _config\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being scrolled.\n         */\n        this._scrollSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being resized.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Cached reference to the boundary element.\n         */\n        this._boundaryElement = null;\n        /**\n         * Whether the native dragging interactions have been enabled on the root element.\n         */\n        this._nativeInteractionsEnabled = true;\n        /**\n         * Elements that can be used to drag the draggable item.\n         */\n        this._handles = [];\n        /**\n         * Registered handles that are currently disabled.\n         */\n        this._disabledHandles = new Set();\n        /**\n         * Layout direction of the item.\n         */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits as the drag sequence is being prepared.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new Subject();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new Subject();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new Subject();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                /** @type {?} */\n                const targetHandle = this._handles.find((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => {\n                    /** @type {?} */\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains((/** @type {?} */ (target))));\n                }));\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        });\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            if (!this._hasStartedDragging) {\n                /** @type {?} */\n                const pointerPosition = this._getPointerPositionOnPage(event);\n                /** @type {?} */\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                /** @type {?} */\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                /** @type {?} */\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    /** @type {?} */\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._startDragSequence(event)));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            /** @type {?} */\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(event);\n            this._hasMoved = true;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition);\n            }\n            else {\n                /** @type {?} */\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    /** @type {?} */\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                }));\n            }\n        });\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._endDragSequence(event);\n        });\n        this.withRootElement(element);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     * @return {?}\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    withHandles(handles) {\n        (/** @type {?} */ (this))._handles = handles.map((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => coerceElement(handle)));\n        (/** @type {?} */ (this))._handles.forEach((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => toggleNativeDragInteractions(handle, false)));\n        (/** @type {?} */ (this))._toggleNativeDragInteractions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    withPreviewTemplate(template) {\n        (/** @type {?} */ (this))._previewTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    withPlaceholderTemplate(template) {\n        (/** @type {?} */ (this))._placeholderTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    withRootElement(rootElement) {\n        /** @type {?} */\n        const element = coerceElement(rootElement);\n        if (element !== (/** @type {?} */ (this))._rootElement) {\n            if ((/** @type {?} */ (this))._rootElement) {\n                (/** @type {?} */ (this))._removeRootElementListeners((/** @type {?} */ (this))._rootElement);\n            }\n            element.addEventListener('mousedown', (/** @type {?} */ (this))._pointerDown, activeEventListenerOptions);\n            element.addEventListener('touchstart', (/** @type {?} */ (this))._pointerDown, passiveEventListenerOptions);\n            (/** @type {?} */ (this))._initialTransform = undefined;\n            (/** @type {?} */ (this))._rootElement = element;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    withBoundaryElement(boundaryElement) {\n        (/** @type {?} */ (this))._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        (/** @type {?} */ (this))._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            (/** @type {?} */ (this))._resizeSubscription = (/** @type {?} */ (this))._viewportRuler\n                .change(10)\n                .subscribe((/**\n             * @return {?}\n             */\n            () => (/** @type {?} */ (this))._containInsideBoundaryOnResize()));\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._boundaryElement = this._rootElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = (/** @type {?} */ (null));\n    }\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        /** @type {?} */\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    setFreeDragPosition(value) {\n        (/** @type {?} */ (this))._activeTransform = { x: 0, y: 0 };\n        (/** @type {?} */ (this))._passiveTransform.x = value.x;\n        (/** @type {?} */ (this))._passiveTransform.y = value.y;\n        if (!(/** @type {?} */ (this))._dropContainer) {\n            (/** @type {?} */ (this))._applyRootElementTransform(value.x, value.y);\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    _sortFromLastPointerPosition() {\n        /** @type {?} */\n        const position = this._pointerPositionAtLastDirectionChange;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(position);\n        }\n    }\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then((/**\n             * @return {?}\n             */\n            () => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            }));\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            }));\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _startDragSequence(event) {\n        // Emit the event on the item before the one on the container.\n        this.started.next({ source: this });\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        if (this._dropContainer) {\n            /** @type {?} */\n            const element = this._rootElement;\n            /** @type {?} */\n            const parent = (/** @type {?} */ (element.parentNode));\n            /** @type {?} */\n            const preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            /** @type {?} */\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this._dropContainer.start();\n            this._initialContainer = this._dropContainer;\n            this._initialIndex = this._dropContainer.getItemIndex(this);\n        }\n        else {\n            this._initialContainer = this._initialIndex = (/** @type {?} */ (undefined));\n        }\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        /** @type {?} */\n        const isDragging = this.isDragging();\n        /** @type {?} */\n        const isTouchSequence = isTouchEvent(event);\n        /** @type {?} */\n        const isAuxiliaryMouseButton = !isTouchSequence && ((/** @type {?} */ (event))).button !== 0;\n        /** @type {?} */\n        const rootElement = this._rootElement;\n        /** @type {?} */\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && ((/** @type {?} */ (event.target))).draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        }));\n        if (this._boundaryElement) {\n            this._boundaryRect = this._boundaryElement.getBoundingClientRect();\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        /** @type {?} */\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        const pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        (/** @type {?} */ (this._anchor.parentNode)).replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = (/** @type {?} */ (this._dropContainer));\n            /** @type {?} */\n            const currentIndex = container.getItemIndex(this);\n            /** @type {?} */\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            /** @type {?} */\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            /** @type {?} */\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        }));\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    _updateActiveDropContainer({ x, y }) {\n        // Drop container that draggable has been moved into.\n        /** @type {?} */\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: (/** @type {?} */ (this._dropContainer)) });\n                (/** @type {?} */ (this._dropContainer)).exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = (/** @type {?} */ (newContainer));\n                this._dropContainer.enter(this, x, y, \n                // If we're re-entering the initial container,\n                // put item the into its starting index to begin with.\n                newContainer === this._initialContainer ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: (/** @type {?} */ (newContainer)),\n                    currentIndex: (/** @type {?} */ (newContainer)).getItemIndex(this)\n                });\n            }));\n        }\n        (/** @type {?} */ (this._dropContainer))._startScrollingIfNecessary(x, y);\n        (/** @type {?} */ (this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    _createPreviewElement() {\n        /** @type {?} */\n        const previewConfig = this._previewTemplate;\n        /** @type {?} */\n        const previewClass = this.previewClass;\n        /** @type {?} */\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        /** @type {?} */\n        let preview;\n        if (previewTemplate) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (previewConfig)).viewContainer.createEmbeddedView(previewTemplate, (/** @type {?} */ (previewConfig)).context);\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if ((/** @type {?} */ (previewConfig)).matchSize) {\n                matchElementSize(preview, this._rootElement);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            /** @type {?} */\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element);\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: '1000'\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach((/**\n                 * @param {?} className\n                 * @return {?}\n                 */\n                className => preview.classList.add(className)));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        /** @type {?} */\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                /** @type {?} */\n                const handler = (/** @type {?} */ (((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }))));\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                /** @type {?} */\n                const timeout = setTimeout((/** @type {?} */ (handler)), duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            }));\n        }));\n    }\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    _createPlaceholderElement() {\n        /** @type {?} */\n        const placeholderConfig = this._placeholderTemplate;\n        /** @type {?} */\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        /** @type {?} */\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = (/** @type {?} */ (placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, (/** @type {?} */ (placeholderConfig)).context);\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        const x = point.pageX - referenceRect.left - this._scrollPosition.left;\n        /** @type {?} */\n        const y = point.pageY - referenceRect.top - this._scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getPointerPositionOnPage(event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        /** @type {?} */\n        const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        return {\n            x: point.pageX - this._scrollPosition.left,\n            y: point.pageY - this._scrollPosition.top\n        };\n    }\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getConstrainedPointerPosition(event) {\n        /** @type {?} */\n        const point = this._getPointerPositionOnPage(event);\n        /** @type {?} */\n        const constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        /** @type {?} */\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            constrainedPoint.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            constrainedPoint.x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            /** @type {?} */\n            const boundaryRect = this._boundaryRect;\n            /** @type {?} */\n            const previewRect = (/** @type {?} */ (this._previewRect));\n            /** @type {?} */\n            const minY = boundaryRect.top + pickupY;\n            /** @type {?} */\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            /** @type {?} */\n            const minX = boundaryRect.left + pickupX;\n            /** @type {?} */\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);\n            constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);\n        }\n        return constrainedPoint;\n    }\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        /** @type {?} */\n        const delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        /** @type {?} */\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        /** @type {?} */\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    _applyRootElementTransform(x, y) {\n        /** @type {?} */\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    _getDragDistance(currentPosition) {\n        /** @type {?} */\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /**\n     * Cleans up any cached element dimensions that we don't need after dragging has stopped.\n     * @private\n     * @return {?}\n     */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     * @private\n     * @return {?}\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        /** @type {?} */\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        /** @type {?} */\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        /** @type {?} */\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        /** @type {?} */\n        const topOverflow = boundaryRect.top - elementRect.top;\n        /** @type {?} */\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /**\n     * Gets the drag start delay, based on the event type.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getDragStartDelay(event) {\n        /** @type {?} */\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n}\nif (false) {\n    /**\n     * Element displayed next to the user's pointer while the element is dragged.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._preview;\n    /**\n     * Reference to the view of the preview element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewRef;\n    /**\n     * Reference to the view of the placeholder element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholderRef;\n    /**\n     * Element that is rendered instead of the draggable item while it is being sorted.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholder;\n    /**\n     * Coordinates within the element at which the user picked up the element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pickupPositionInElement;\n    /**\n     * Coordinates on the page at which the user picked up the element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pickupPositionOnPage;\n    /**\n     * Anchor node used to save the place in the DOM where the element was\n     * picked up so that it can be restored at the end of the drag sequence.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._anchor;\n    /**\n     * CSS `transform` applied to the element when it isn't being dragged. We need a\n     * passive transform in order for the dragged element to retain its new position\n     * after the user has stopped dragging and because we need to know the relative\n     * position in case they start dragging again. This corresponds to `element.style.transform`.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._passiveTransform;\n    /**\n     * CSS `transform` that is applied to the element while it's being dragged.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._activeTransform;\n    /**\n     * Inline `transform` value that the element had before the first dragging sequence.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialTransform;\n    /**\n     * Whether the dragging sequence has been started. Doesn't\n     * necessarily mean that the element has been moved.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._hasStartedDragging;\n    /**\n     * Whether the element has moved since the user started dragging it.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._hasMoved;\n    /**\n     * Drop container in which the DragRef resided when dragging began.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialContainer;\n    /**\n     * Index at which the item started in its initial container.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialIndex;\n    /**\n     * Cached scroll position on the page when the element was picked up.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._scrollPosition;\n    /**\n     * Emits when the item is being moved.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._moveEvents;\n    /**\n     * Keeps track of the direction in which the user is dragging along each axis.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerDirectionDelta;\n    /**\n     * Pointer position at which the last change in the delta occurred.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerPositionAtLastDirectionChange;\n    /**\n     * Root DOM node of the drag instance. This is the element that will\n     * be moved around as the user is dragging.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._rootElement;\n    /**\n     * Inline style value of `-webkit-tap-highlight-color` at the time the\n     * dragging was started. Used to restore the value once we're done dragging.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._rootElementTapHighlight;\n    /**\n     * Subscription to pointer movement events.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerMoveSubscription;\n    /**\n     * Subscription to the event that is dispatched when the user lifts their pointer.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerUpSubscription;\n    /**\n     * Subscription to the viewport being scrolled.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._scrollSubscription;\n    /**\n     * Subscription to the viewport being resized.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._resizeSubscription;\n    /**\n     * Time at which the last touch event occurred. Used to avoid firing the same\n     * events multiple times on touch devices where the browser will fire a fake\n     * mouse event for each touch event, after a certain time.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._lastTouchEventTime;\n    /**\n     * Time at which the last dragging sequence was started.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dragStartTime;\n    /**\n     * Cached reference to the boundary element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._boundaryElement;\n    /**\n     * Whether the native dragging interactions have been enabled on the root element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._nativeInteractionsEnabled;\n    /**\n     * Cached dimensions of the preview element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewRect;\n    /**\n     * Cached dimensions of the boundary element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._boundaryRect;\n    /**\n     * Element that will be used as a template to create the draggable item's preview.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewTemplate;\n    /**\n     * Template for placeholder element rendered to show where a draggable would be dropped.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholderTemplate;\n    /**\n     * Elements that can be used to drag the draggable item.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._handles;\n    /**\n     * Registered handles that are currently disabled.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._disabledHandles;\n    /**\n     * Droppable container that the draggable is a part of.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dropContainer;\n    /**\n     * Layout direction of the item.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._direction;\n    /**\n     * Axis along which dragging is locked.\n     * @type {?}\n     */\n    DragRef.prototype.lockAxis;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     * @type {?}\n     */\n    DragRef.prototype.dragStartDelay;\n    /**\n     * Class to be added to the preview element.\n     * @type {?}\n     */\n    DragRef.prototype.previewClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._disabled;\n    /**\n     * Emits as the drag sequence is being prepared.\n     * @type {?}\n     */\n    DragRef.prototype.beforeStarted;\n    /**\n     * Emits when the user starts dragging the item.\n     * @type {?}\n     */\n    DragRef.prototype.started;\n    /**\n     * Emits when the user has released a drag item, before any animations have started.\n     * @type {?}\n     */\n    DragRef.prototype.released;\n    /**\n     * Emits when the user stops dragging an item in the container.\n     * @type {?}\n     */\n    DragRef.prototype.ended;\n    /**\n     * Emits when the user has moved the item into a new container.\n     * @type {?}\n     */\n    DragRef.prototype.entered;\n    /**\n     * Emits when the user removes the item its container by dragging it into another container.\n     * @type {?}\n     */\n    DragRef.prototype.exited;\n    /**\n     * Emits when the user drops the item inside a container.\n     * @type {?}\n     */\n    DragRef.prototype.dropped;\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     * @type {?}\n     */\n    DragRef.prototype.moved;\n    /**\n     * Arbitrary data that can be attached to the drag item.\n     * @type {?}\n     */\n    DragRef.prototype.data;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page and should return a point describing where the item should\n     * be rendered.\n     * @type {?}\n     */\n    DragRef.prototype.constrainPosition;\n    /**\n     * Handler for the `mousedown`/`touchstart` events.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerDown;\n    /**\n     * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerMove;\n    /**\n     * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerUp;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dragDropRegistry;\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param {?} x Desired position of the element along the X axis.\n * @param {?} y Desired position of the element along the Y axis.\n * @return {?}\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/**\n * Creates a deep clone of an element.\n * @param {?} node\n * @return {?}\n */\nfunction deepCloneNode(node) {\n    /** @type {?} */\n    const clone = (/** @type {?} */ (node.cloneNode(true)));\n    /** @type {?} */\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    /** @type {?} */\n    const descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        /** @type {?} */\n        const cloneCanvases = clone.querySelectorAll('canvas');\n        for (let i = 0; i < descendantCanvases.length; i++) {\n            /** @type {?} */\n            const correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n            }\n        }\n    }\n    return clone;\n}\n/**\n * Clamps a value between a minimum and a maximum.\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param {?} node Node to be removed.\n * @return {?}\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/**\n * Determines whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the element into which the drag preview should be inserted.\n * @param {?} documentRef\n * @return {?}\n */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n * @param {?} viewRef\n * @param {?} _document\n * @return {?}\n */\nfunction getRootNode(viewRef, _document) {\n    /** @type {?} */\n    const rootNode = viewRef.rootNodes[0];\n    if (rootNode.nodeType !== _document.ELEMENT_NODE) {\n        /** @type {?} */\n        const wrapper = _document.createElement('div');\n        wrapper.appendChild(rootNode);\n        return wrapper;\n    }\n    return (/** @type {?} */ (rootNode));\n}\n/**\n * Matches the target element's size to the source's size.\n * @param {?} target Element that needs to be resized.\n * @param {?} source Element whose size needs to be matched.\n * @return {?}\n */\nfunction matchElementSize(target, source) {\n    /** @type {?} */\n    const sourceRect = source.getBoundingClientRect();\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    const from = clamp$1(fromIndex, array.length - 1);\n    /** @type {?} */\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    const target = array[from];\n    /** @type {?} */\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @template T\n * @param {?} currentArray Array from which to copy the item.\n * @param {?} targetArray Array into which is copy the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n *\n * @return {?}\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drop-list-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n * @type {?}\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Entry in the position cache for draggable items.\n * \\@docs-private\n * @record\n */\nfunction CachedItemPosition() { }\nif (false) {\n    /**\n     * Instance of the drag item.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.drag;\n    /**\n     * Dimensions of the item.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.clientRect;\n    /**\n     * Amount by which the item has been moved since dragging started.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.offset;\n}\n/**\n * Object holding the scroll position of something.\n * @record\n */\nfunction ScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ScrollPosition.prototype.top;\n    /** @type {?} */\n    ScrollPosition.prototype.left;\n}\n/** @enum {number} */\nconst AutoScrollVerticalDirection = {\n    NONE: 0, UP: 1, DOWN: 2,\n};\n/** @enum {number} */\nconst AutoScrollHorizontalDirection = {\n    NONE: 0, LEFT: 1, RIGHT: 2,\n};\n/**\n * Internal compile-time-only representation of a `DropListRef`.\n * Used to avoid circular import issues between the `DropListRef` and the `DragRef`.\n * \\@docs-private\n * @record\n */\nfunction DropListRefInternal() { }\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * @template T\n */\nclass DropListRef {\n    /**\n     * @param {?} element\n     * @param {?} _dragDropRegistry\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     */\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Whether starting a dragging sequence from this container is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether sorting items within the list is disabled.\n         */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits right before dragging has started.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new Subject();\n        /**\n         * Whether an item in the list is being dragged.\n         */\n        this._isDragging = false;\n        /**\n         * Cache of the dimensions of all the items inside the container.\n         */\n        this._itemPositions = [];\n        /**\n         * Cached positions of the scrollable parent elements.\n         */\n        this._parentPositions = new Map();\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: (/** @type {?} */ (null)), delta: 0 };\n        /**\n         * Drop lists that are connected to the current one.\n         */\n        this._siblings = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this._orientation = 'vertical';\n        /**\n         * Connected siblings that currently have a dragged item.\n         */\n        this._activeSiblings = new Set();\n        /**\n         * Layout direction of the drop list.\n         */\n        this._direction = 'ltr';\n        /**\n         * Subscription to the window being scrolled.\n         */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /**\n         * Vertical direction in which the list is currently scrolling.\n         */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /**\n         * Horizontal direction in which the list is currently scrolling.\n         */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /**\n         * Used to signal to the current auto-scroll sequence when to stop.\n         */\n        this._stopScrollTimers = new Subject();\n        /**\n         * Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly.\n         */\n        this._cachedShadowRoot = null;\n        /**\n         * Starts the interval that'll auto-scroll the element.\n         */\n        this._startScrollInterval = (/**\n         * @return {?}\n         */\n        () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            }));\n        });\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n    }\n    /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = (/** @type {?} */ (null));\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._isDragging;\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        /** @type {?} */\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || ((/** @type {?} */ (styles))).scrollSnapType || '';\n        ((/** @type {?} */ (styles))).scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._startReceiving(this)));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?=} index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        /** @type {?} */\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        /** @type {?} */\n        const activeDraggables = this._activeDraggables;\n        /** @type {?} */\n        const currentIndex = activeDraggables.indexOf(item);\n        /** @type {?} */\n        const placeholder = item.getPlaceholderElement();\n        /** @type {?} */\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            const element = newPositionReference.getRootElement();\n            (/** @type {?} */ (element.parentElement)).insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed.\n        this._cacheItemPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * \\@breaking-change 11.0.0 `previousIndex` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?} distance Distance the user has dragged since the start of the dragging sequence.\n     * @param {?=} previousIndex Index of the item when dragging started.\n     *\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    withItems(items) {\n        (/** @type {?} */ (this))._draggables = items;\n        items.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._withDropContainer((/** @type {?} */ (this)))));\n        if ((/** @type {?} */ (this)).isDragging()) {\n            (/** @type {?} */ (this))._cacheItems();\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    connectedTo(connectedTo) {\n        (/** @type {?} */ (this))._siblings = connectedTo.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    withOrientation(orientation) {\n        (/** @type {?} */ (this))._orientation = orientation;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} elements Elements that can be scrolled.\n     * @return {THIS}\n     */\n    withScrollableParents(elements) {\n        /** @type {?} */\n        const element = coerceElement((/** @type {?} */ (this)).element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        (/** @type {?} */ (this))._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        /** @type {?} */\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !isPointerNearClientRect(this._clientRect, pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        const siblings = this._itemPositions;\n        /** @type {?} */\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentIndex = findIndex(siblings, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n        /** @type {?} */\n        const siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        const delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        // How many pixels the item's placeholder should be offset.\n        /** @type {?} */\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        /** @type {?} */\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        /** @type {?} */\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((/**\n         * @param {?} sibling\n         * @param {?} index\n         * @return {?}\n         */\n        (sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            const isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        }));\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        /** @type {?} */\n        let scrollNode;\n        /** @type {?} */\n        let verticalScrollDirection = 0 /* NONE */;\n        /** @type {?} */\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.forEach((/**\n         * @param {?} position\n         * @param {?} element\n         * @return {?}\n         */\n        (position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections((/** @type {?} */ (element)), position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = (/** @type {?} */ (element));\n                }\n            }\n        }));\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            /** @type {?} */\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /**\n     * Caches the positions of the configured scrollable parents.\n     * @private\n     * @return {?}\n     */\n    _cacheParentPositions() {\n        this._parentPositions.clear();\n        this._parentPositions.set(this._document, {\n            scrollPosition: (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition(),\n        });\n        this._scrollableElements.forEach((/**\n         * @param {?} element\n         * @return {?}\n         */\n        element => {\n            /** @type {?} */\n            const clientRect = getMutableClientRect(element);\n            // We keep the ClientRect cached in two properties, because it's referenced in a lot of\n            // performance-sensitive places and we want to avoid the extra lookups. The `element` is\n            // guaranteed to always be in the `_scrollableElements` so this should always match.\n            if (element === this.element) {\n                this._clientRect = clientRect;\n            }\n            this._parentPositions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect\n            });\n        }));\n    }\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    _cacheItemPositions() {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map((/**\n         * @param {?} drag\n         * @return {?}\n         */\n        drag => {\n            /** @type {?} */\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        })).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        }));\n    }\n    /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    _reset() {\n        this._isDragging = false;\n        /** @type {?} */\n        const styles = coerceElement(this.element).style;\n        ((/** @type {?} */ (styles))).scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item.getRootElement().style.transform = ''));\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._stopReceiving(this)));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        /** @type {?} */\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            /** @type {?} */\n            const start = isHorizontal ? 'left' : 'top';\n            /** @type {?} */\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, (/**\n         * @param {?} __0\n         * @param {?} _\n         * @param {?} array\n         * @return {?}\n         */\n        ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);\n        }));\n    }\n    /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrolledParent Element that was scrolled.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @return {?}\n     */\n    _updateAfterScroll(scrolledParent, newTop, newLeft) {\n        /** @type {?} */\n        const scrollPosition = (/** @type {?} */ (this._parentPositions.get(scrolledParent))).scrollPosition;\n        /** @type {?} */\n        const topDifference = scrollPosition.top - newTop;\n        /** @type {?} */\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this._parentPositions.forEach((/**\n         * @param {?} position\n         * @param {?} node\n         * @return {?}\n         */\n        (position, node) => {\n            if (position.clientRect && scrolledParent !== node && scrolledParent.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        }));\n        // Since we know the amount that the user has scrolled we can shift all of the client rectangles\n        // ourselves. This is cheaper than re-measuring everything and we can avoid inconsistent\n        // behavior where we might be measuring the element before its position has changed.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        }));\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        }));\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._canReceive(item, x, y)));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        /** @type {?} */\n        const elementFromPoint = (/** @type {?} */ (this._getShadowRoot().elementFromPoint(x, y)));\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    _startReceiving(sibling) {\n        /** @type {?} */\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     * @private\n     * @return {?}\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (this.isDragging()) {\n                /** @type {?} */\n                const target = (/** @type {?} */ (event.target));\n                /** @type {?} */\n                const position = this._parentPositions.get(target);\n                if (position) {\n                    /** @type {?} */\n                    let newTop;\n                    /** @type {?} */\n                    let newLeft;\n                    if (target === this._document) {\n                        /** @type {?} */\n                        const scrollPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n                        newTop = scrollPosition.top;\n                        newLeft = scrollPosition.left;\n                    }\n                    else {\n                        newTop = ((/** @type {?} */ (target))).scrollTop;\n                        newLeft = ((/** @type {?} */ (target))).scrollLeft;\n                    }\n                    this._updateAfterScroll(target, newTop, newLeft);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        }));\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     * @private\n     * @return {?}\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            this._cachedShadowRoot = getShadowRoot(coerceElement(this.element)) || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\nif (false) {\n    /**\n     * Element that the drop list is attached to.\n     * @type {?}\n     */\n    DropListRef.prototype.element;\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.disabled;\n    /**\n     * Whether sorting items within the list is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.sortingDisabled;\n    /**\n     * Locks the position of the draggable elements inside the container along the specified axis.\n     * @type {?}\n     */\n    DropListRef.prototype.lockAxis;\n    /**\n     * Whether auto-scrolling the view when the user\n     * moves their pointer close to the edges is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.autoScrollDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     * @type {?}\n     */\n    DropListRef.prototype.enterPredicate;\n    /**\n     * Emits right before dragging has started.\n     * @type {?}\n     */\n    DropListRef.prototype.beforeStarted;\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     * @type {?}\n     */\n    DropListRef.prototype.entered;\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     * @type {?}\n     */\n    DropListRef.prototype.exited;\n    /**\n     * Emits when the user drops an item inside the container.\n     * @type {?}\n     */\n    DropListRef.prototype.dropped;\n    /**\n     * Emits as the user is swapping items while actively dragging.\n     * @type {?}\n     */\n    DropListRef.prototype.sorted;\n    /**\n     * Arbitrary data that can be attached to the drop list.\n     * @type {?}\n     */\n    DropListRef.prototype.data;\n    /**\n     * Whether an item in the list is being dragged.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._isDragging;\n    /**\n     * Cache of the dimensions of all the items inside the container.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._itemPositions;\n    /**\n     * Cached positions of the scrollable parent elements.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._parentPositions;\n    /**\n     * Cached `ClientRect` of the drop list.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._clientRect;\n    /**\n     * Draggable items that are currently active inside the container. Includes the items\n     * from `_draggables`, as well as any items that have been dragged in, but haven't\n     * been dropped yet.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._activeDraggables;\n    /**\n     * Keeps track of the item that was last swapped with the dragged item, as\n     * well as what direction the pointer was moving in when the swap occured.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._previousSwap;\n    /**\n     * Draggable items in the container.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._draggables;\n    /**\n     * Drop lists that are connected to the current one.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._siblings;\n    /**\n     * Direction in which the list is oriented.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._orientation;\n    /**\n     * Connected siblings that currently have a dragged item.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._activeSiblings;\n    /**\n     * Layout direction of the drop list.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._direction;\n    /**\n     * Subscription to the window being scrolled.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._viewportScrollSubscription;\n    /**\n     * Vertical direction in which the list is currently scrolling.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._verticalScrollDirection;\n    /**\n     * Horizontal direction in which the list is currently scrolling.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._horizontalScrollDirection;\n    /**\n     * Node that is being auto-scrolled.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._scrollNode;\n    /**\n     * Used to signal to the current auto-scroll sequence when to stop.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._stopScrollTimers;\n    /**\n     * Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._cachedShadowRoot;\n    /**\n     * Reference to the document.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._document;\n    /**\n     * Elements that can be scrolled while the user is dragging.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._scrollableElements;\n    /**\n     * Initial value for the element's `scroll-snap-type` style.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._initialScrollSnap;\n    /**\n     * Starts the interval that'll auto-scroll the element.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._startScrollInterval;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._dragDropRegistry;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._viewportRuler;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param {?} clientRect `ClientRect` that should be updated.\n * @param {?} top Amount to add to the `top` position.\n * @param {?} left Amount to add to the `left` position.\n * @return {?}\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param {?} rect ClientRect to check against.\n * @param {?} pointerX Coordinates along the X axis.\n * @param {?} pointerY Coordinates along the Y axis.\n * @return {?}\n */\nfunction isPointerNearClientRect(rect, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    /** @type {?} */\n    const xThreshold = width * DROP_PROXIMITY_THRESHOLD;\n    /** @type {?} */\n    const yThreshold = height * DROP_PROXIMITY_THRESHOLD;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Gets a mutable version of an element's bounding `ClientRect`.\n * @param {?} element\n * @return {?}\n */\nfunction getMutableClientRect(element) {\n    /** @type {?} */\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    /** @type {?} */\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @return {?}\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    /** @type {?} */\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param {?} element Element for which we should calculate the scroll direction.\n * @param {?} clientRect Bounding client rectangle of the element.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    /** @type {?} */\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    /** @type {?} */\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    /** @type {?} */\n    let verticalScrollDirection = 0 /* NONE */;\n    /** @type {?} */\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        /** @type {?} */\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        /** @type {?} */\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n/**\n * Gets the shadow root of an element, if any.\n * @param {?} element\n * @return {?}\n */\nfunction getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        /** @type {?} */\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        if (rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event options that can be used to bind an active, capturing event.\n * @type {?}\n */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        });\n        this._document = _document;\n    }\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            }));\n        }\n    }\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            const isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerMove.next((/** @type {?} */ (e)))),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerUp.next((/** @type {?} */ (e)))),\n                options: true\n            })\n                .set('scroll', {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.scroll.next(e)),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this._globalListeners.forEach((/**\n                 * @param {?} config\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                }));\n            }));\n        }\n    }\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dragInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDragItem(instance)));\n        this._dropInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDropContainer(instance)));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((/**\n         * @param {?} config\n         * @param {?} name\n         * @return {?}\n         */\n        (config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        }));\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ DragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._document;\n    /**\n     * Registered drop container instances.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._dropInstances;\n    /**\n     * Registered drag item instances.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._dragInstances;\n    /**\n     * Drag item instances that are currently being dragged.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._activeDragInstances;\n    /**\n     * Keeps track of the event listeners that we've bound to the `document`.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._globalListeners;\n    /**\n     * Emits the `touchmove` or `mousemove` events that are dispatched\n     * while the user is dragging a drag item instance.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.pointerMove;\n    /**\n     * Emits the `touchend` or `mouseup` events that are dispatched\n     * while the user is dragging a drag item instance.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.pointerUp;\n    /**\n     * Emits when the viewport has been scrolled while the user is dragging an item.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.scroll;\n    /**\n     * Event listener that will prevent the default browser action while the user is dragging.\n     * \\@param event Event whose default action should be prevented.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._preventDefaultWhileDragging;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default configuration to be used when creating a `DragRef`.\n * @type {?}\n */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    /**\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\n/** @nocollapse */\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/** @nocollapse */ DragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._dragDropRegistry;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-events.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Event emitted when the user starts dragging a draggable.\n * @record\n * @template T\n */\nfunction CdkDragStart() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragStart.prototype.source;\n}\n/**\n * Event emitted when the user releases an item, before any animations have started.\n * @record\n * @template T\n */\nfunction CdkDragRelease() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragRelease.prototype.source;\n}\n/**\n * Event emitted when the user stops dragging a draggable.\n * @record\n * @template T\n */\nfunction CdkDragEnd() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragEnd.prototype.source;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragEnd.prototype.distance;\n}\n/**\n * Event emitted when the user moves an item into a new drop container.\n * @record\n * @template T, I\n */\nfunction CdkDragEnter() { }\nif (false) {\n    /**\n     * Container into which the user has moved the item.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.container;\n    /**\n     * Item that was moved into the container.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.item;\n    /**\n     * Index at which the item has entered the container.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.currentIndex;\n}\n/**\n * Event emitted when the user removes an item from a\n * drop container by moving it into another one.\n * @record\n * @template T, I\n */\nfunction CdkDragExit() { }\nif (false) {\n    /**\n     * Container from which the user has a removed an item.\n     * @type {?}\n     */\n    CdkDragExit.prototype.container;\n    /**\n     * Item that was removed from the container.\n     * @type {?}\n     */\n    CdkDragExit.prototype.item;\n}\n/**\n * Event emitted when the user drops a draggable item inside a drop container.\n * @record\n * @template T, O\n */\nfunction CdkDragDrop() { }\nif (false) {\n    /**\n     * Index of the item when it was picked up.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.previousIndex;\n    /**\n     * Current index of the item.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.currentIndex;\n    /**\n     * Item that is being dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.item;\n    /**\n     * Container in which the item was dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.container;\n    /**\n     * Container from which the item was picked up. Can be the same as the `container`.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.previousContainer;\n    /**\n     * Whether the user's pointer was over the container when the item was dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.isPointerOverContainer;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.distance;\n}\n/**\n * Event emitted as the user is dragging a draggable item.\n * @record\n * @template T\n */\nfunction CdkDragMove() { }\nif (false) {\n    /**\n     * Item that is being dragged.\n     * @type {?}\n     */\n    CdkDragMove.prototype.source;\n    /**\n     * Position of the user's pointer on the page.\n     * @type {?}\n     */\n    CdkDragMove.prototype.pointerPosition;\n    /**\n     * Native event that is causing the dragging.\n     * @type {?}\n     */\n    CdkDragMove.prototype.event;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragMove.prototype.distance;\n    /**\n     * Indicates the direction in which the user is dragging the element along each axis.\n     * `1` means that the position is increasing (e.g. the user is moving to the right or downwards),\n     * whereas `-1` means that it's decreasing (they're moving to the left or upwards). `0` means\n     * that the position hasn't changed.\n     * @type {?}\n     */\n    CdkDragMove.prototype.delta;\n}\n/**\n * Event emitted when the user swaps the position of two drag items.\n * @record\n * @template T, I\n */\nfunction CdkDragSortEvent() { }\nif (false) {\n    /**\n     * Index from which the item was sorted previously.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.previousIndex;\n    /**\n     * Index that the item is currently in.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.currentIndex;\n    /**\n     * Container that the item belongs to.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.container;\n    /**\n     * Item that is being sorted.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.item;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-parent.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-handle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nclass CdkDragHandle {\n    /**\n     * @param {?} element\n     * @param {?=} parentDrag\n     */\n    constructor(element, parentDrag) {\n        this.element = element;\n        /**\n         * Emits when the state of the handle has changed.\n         */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    /**\n     * Whether starting to drag through this handle is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 8)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] } });\n/** @nocollapse */\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDragHandle.ngAcceptInputType_disabled;\n    /**\n     * Closest parent draggable instance.\n     * @type {?}\n     */\n    CdkDragHandle.prototype._parentDrag;\n    /**\n     * Emits when the state of the handle has changed.\n     * @type {?}\n     */\n    CdkDragHandle.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDragHandle.prototype._disabled;\n    /** @type {?} */\n    CdkDragHandle.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nclass CdkDragPlaceholder {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" } });\n/** @nocollapse */\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Context data to be added to the placeholder template instance.\n     * @type {?}\n     */\n    CdkDragPlaceholder.prototype.data;\n    /** @type {?} */\n    CdkDragPlaceholder.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-preview.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nclass CdkDragPreview {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /**\n     * Whether the preview should preserve the same size as the item that is being dragged.\n     * @return {?}\n     */\n    get matchSize() { return this._matchSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" } });\n/** @nocollapse */\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDragPreview.ngAcceptInputType_matchSize;\n    /**\n     * Context data to be added to the preview template instance.\n     * @type {?}\n     */\n    CdkDragPreview.prototype.data;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDragPreview.prototype._matchSize;\n    /** @type {?} */\n    CdkDragPreview.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n * @type {?}\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n/**\n * Object that can be used to configure the drag\n * items and drop lists within a module or a component.\n * @record\n */\nfunction DragDropConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.lockAxis;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.dragStartDelay;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.constrainPosition;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.previewClass;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.boundaryElement;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.rootElementSelector;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.draggingDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.sortingDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.listAutoScrollDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.listOrientation;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @type {?}\n */\nconst CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nclass CdkDrag {\n    /**\n     * @param {?} element\n     * @param {?} dropContainer\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} config\n     * @param {?} _dir\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     */\n    constructor(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._dragRef.moved.pipe(map((/**\n             * @param {?} movedEvent\n             * @return {?}\n             */\n            movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            })))).subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n            });\n        }));\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                /** @type {?} */\n                const childHandleElements = handles\n                    .filter((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle._parentDrag === this))\n                    .map((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle.element));\n                this._dragRef.withHandles(childHandleElements);\n            })), \n            // Listen if the state of any of the handles changes.\n            switchMap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                return (/** @type {?} */ (merge(...handles.map((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                item => {\n                    return item._stateChanges.pipe(startWith(item));\n                })))));\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} handleInstance\n             * @return {?}\n             */\n            handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                /** @type {?} */\n                const dragRef = this._dragRef;\n                /** @type {?} */\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            }));\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const rootSelectorChange = changes['rootElementSelector'];\n        /** @type {?} */\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    _updateRootElement() {\n        /** @type {?} */\n        const element = this.element.nativeElement;\n        /** @type {?} */\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    _getBoundaryElement() {\n        /** @type {?} */\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        /** @type {?} */\n        const element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!ref.isDragging()) {\n                /** @type {?} */\n                const dir = this._dir;\n                /** @type {?} */\n                const dragStartDelay = this.dragStartDelay;\n                /** @type {?} */\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                /** @type {?} */\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        }));\n    }\n    /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.started.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.released.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.released.emit({ source: this });\n        }));\n        ref.ended.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        }));\n    }\n    /**\n     * Assigns the default input values based on a provided config object.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPreview, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragHandle, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CdkDragHandle, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPreview]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPlaceholder]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDrag.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._destroyed;\n    /**\n     * Reference to the underlying drag instance.\n     * @type {?}\n     */\n    CdkDrag.prototype._dragRef;\n    /**\n     * Elements that can be used to drag the draggable item.\n     * @type {?}\n     */\n    CdkDrag.prototype._handles;\n    /**\n     * Element that will be used as a template to create the draggable item's preview.\n     * @type {?}\n     */\n    CdkDrag.prototype._previewTemplate;\n    /**\n     * Template for placeholder element rendered to show where a draggable would be dropped.\n     * @type {?}\n     */\n    CdkDrag.prototype._placeholderTemplate;\n    /**\n     * Arbitrary data to attach to this drag instance.\n     * @type {?}\n     */\n    CdkDrag.prototype.data;\n    /**\n     * Locks the position of the dragged element along the specified axis.\n     * @type {?}\n     */\n    CdkDrag.prototype.lockAxis;\n    /**\n     * Selector that will be used to determine the root draggable element, starting from\n     * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n     * when trying to enable dragging on an element that you might not have access to.\n     * @type {?}\n     */\n    CdkDrag.prototype.rootElementSelector;\n    /**\n     * Node or selector that will be used to determine the element to which the draggable's\n     * position will be constrained. If a string is passed in, it'll be used as a selector that\n     * will be matched starting from the element's parent and going up the DOM until a match\n     * has been found.\n     * @type {?}\n     */\n    CdkDrag.prototype.boundaryElement;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     * @type {?}\n     */\n    CdkDrag.prototype.dragStartDelay;\n    /**\n     * Sets the position of a `CdkDrag` that is outside of a drop container.\n     * Can be used to restore the element's position for a returning user.\n     * @type {?}\n     */\n    CdkDrag.prototype.freeDragPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._disabled;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page and should return a point describing where the item should\n     * be rendered.\n     * @type {?}\n     */\n    CdkDrag.prototype.constrainPosition;\n    /**\n     * Class to be added to the preview element.\n     * @type {?}\n     */\n    CdkDrag.prototype.previewClass;\n    /**\n     * Emits when the user starts dragging the item.\n     * @type {?}\n     */\n    CdkDrag.prototype.started;\n    /**\n     * Emits when the user has released a drag item, before any animations have started.\n     * @type {?}\n     */\n    CdkDrag.prototype.released;\n    /**\n     * Emits when the user stops dragging an item in the container.\n     * @type {?}\n     */\n    CdkDrag.prototype.ended;\n    /**\n     * Emits when the user has moved the item into a new container.\n     * @type {?}\n     */\n    CdkDrag.prototype.entered;\n    /**\n     * Emits when the user removes the item its container by dragging it into another container.\n     * @type {?}\n     */\n    CdkDrag.prototype.exited;\n    /**\n     * Emits when the user drops the item inside a container.\n     * @type {?}\n     */\n    CdkDrag.prototype.dropped;\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     * @type {?}\n     */\n    CdkDrag.prototype.moved;\n    /**\n     * Element that the draggable is attached to.\n     * @type {?}\n     */\n    CdkDrag.prototype.element;\n    /**\n     * Droppable container that the draggable is a part of.\n     * @type {?}\n     */\n    CdkDrag.prototype.dropContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._changeDetectorRef;\n}\n/**\n * Gets the closest ancestor of an element that matches a selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction getClosestMatchingAncestor(element, selector) {\n    /** @type {?} */\n    let currentElement = (/** @type {?} */ (element.parentElement));\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            ((/** @type {?} */ (currentElement))).msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drop-list-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n * @template T\n */\nclass CdkDropListGroup {\n    constructor() {\n        /**\n         * Drop lists registered inside the group.\n         */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /**\n     * Whether starting a dragging sequence from inside this group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup'\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDropListGroup.ngAcceptInputType_disabled;\n    /**\n     * Drop lists registered inside the group.\n     * @type {?}\n     */\n    CdkDropListGroup.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropListGroup.prototype._disabled;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drop-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop zones.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Internal compile-time-only representation of a `CdkDropList`.\n * Used to avoid circular import issues between the `CdkDropList` and the `CdkDrag`.\n * \\@docs-private\n * @record\n */\nfunction CdkDropListInternal() { }\nconst ɵ0 = undefined;\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nclass CdkDropList {\n    /**\n     * @param {?} element\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     * @param {?=} _dir\n     * @param {?=} _group\n     * @param {?=} _scrollDispatcher\n     * @param {?=} config\n     */\n    constructor(element, dragDrop, _changeDetectorRef, _dir, _group, _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (/**\n         * @param {?} drag\n         * @param {?} drop\n         * @return {?}\n         */\n        (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        });\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n        if (this._scrollDispatcher) {\n            /** @type {?} */\n            const scrollableParents = this._scrollDispatcher\n                .getAncestorScrollContainers(this.element)\n                .map((/**\n             * @param {?} scrollable\n             * @return {?}\n             */\n            scrollable => scrollable.getElementRef().nativeElement));\n            this._dropListRef.withScrollableParents(scrollableParents);\n        }\n    }\n    /**\n     * Registers an items with the drop list.\n     * @param {?} item\n     * @return {?}\n     */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /**\n     * Removes an item from the drop list.\n     * @param {?} item\n     * @return {?}\n     */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /**\n     * Gets the registered items in the list, sorted by their position in the DOM.\n     * @return {?}\n     */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            /** @type {?} */\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Starts dragging an item.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @return {?}\n     */\n    start() {\n        this._dropListRef.start();\n    }\n    /**\n     * Drops an item into this container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     *\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer) {\n        this._dropListRef.drop(item._dragRef, currentIndex, previousContainer._dropListRef, isPointerOverContainer, { x: 0, y: 0 });\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this._dropListRef.enter(item._dragRef, pointerX, pointerY);\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._dropListRef.exit(item._dragRef);\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        return this._dropListRef.getItemIndex(item._dragRef);\n    }\n    /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => ref.withDirection(value)));\n        }\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const siblings = coerceArray(this.connectedTo).map((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => {\n                return typeof drop === 'string' ?\n                    (/** @type {?} */ (CdkDropList._dropLists.find((/**\n                     * @param {?} list\n                     * @return {?}\n                     */\n                    list => list.id === drop)))) : drop;\n            }));\n            if (this._group) {\n                this._group._items.forEach((/**\n                 * @param {?} drop\n                 * @return {?}\n                 */\n                drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                }));\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => drop && drop !== this)).map((/**\n             * @param {?} list\n             * @return {?}\n             */\n            list => list._dropListRef)))\n                .withOrientation(this.orientation);\n        }));\n    }\n    /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.sorted.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Assigns the default input values based on a provided config object.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /**\n     * Syncs up the registered drag items with underlying drop list ref.\n     * @private\n     * @return {?}\n     */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._dragRef)));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CdkDropListGroup, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CdkDropListGroup, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/**\n * Keeps track of the drop lists that are currently on the page.\n */\nCdkDropList._dropLists = [];\n/** @nocollapse */\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CdkDropListGroup, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc1.ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\nif (false) {\n    /**\n     * Keeps track of the drop lists that are currently on the page.\n     * @type {?}\n     * @private\n     */\n    CdkDropList._dropLists;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_sortingDisabled;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_autoScrollDisabled;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._destroyed;\n    /**\n     * Reference to the underlying drop list instance.\n     * @type {?}\n     */\n    CdkDropList.prototype._dropListRef;\n    /**\n     * Other draggable containers that this container is connected to and into which the\n     * container's items can be transferred. Can either be references to other drop containers,\n     * or their unique IDs.\n     * @type {?}\n     */\n    CdkDropList.prototype.connectedTo;\n    /**\n     * Arbitrary data to attach to this container.\n     * @type {?}\n     */\n    CdkDropList.prototype.data;\n    /**\n     * Direction in which the list is oriented.\n     * @type {?}\n     */\n    CdkDropList.prototype.orientation;\n    /**\n     * Unique ID for the drop zone. Can be used as a reference\n     * in the `connectedTo` of another `CdkDropList`.\n     * @type {?}\n     */\n    CdkDropList.prototype.id;\n    /**\n     * Locks the position of the draggable elements inside the container along the specified axis.\n     * @type {?}\n     */\n    CdkDropList.prototype.lockAxis;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._disabled;\n    /**\n     * Whether sorting within this drop list is disabled.\n     * @type {?}\n     */\n    CdkDropList.prototype.sortingDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     * @type {?}\n     */\n    CdkDropList.prototype.enterPredicate;\n    /**\n     * Whether to auto-scroll the view when the user moves their pointer close to the edges.\n     * @type {?}\n     */\n    CdkDropList.prototype.autoScrollDisabled;\n    /**\n     * Emits when the user drops an item inside the container.\n     * @type {?}\n     */\n    CdkDropList.prototype.dropped;\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     * @type {?}\n     */\n    CdkDropList.prototype.entered;\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     * @type {?}\n     */\n    CdkDropList.prototype.exited;\n    /**\n     * Emits as the user is swapping items while actively dragging.\n     * @type {?}\n     */\n    CdkDropList.prototype.sorted;\n    /**\n     * Keeps track of the items that are registered with this container. Historically we used to\n     * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n     * well which means that we can't handle cases like dragging the headers of a `mat-table`\n     * correctly. What we do instead is to have the items register themselves with the container\n     * and then we sort them based on their position in the DOM.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._unsortedItems;\n    /**\n     * Element that the drop list is attached to.\n     * @type {?}\n     */\n    CdkDropList.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._group;\n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * \\@breaking-change 11.0.0\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._scrollDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_CONFIG_FACTORY, CDK_DROP_LIST, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem, CDK_DRAG_PARENT as ɵangular_material_src_cdk_drag_drop_drag_drop_b };\n\n//# sourceMappingURL=drag-drop.js.map","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/block-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousHTMLStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousScrollPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._isEnabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\nfunction ScrollStrategy() { }\nif (false) {\n    /**\n     * Enable this scroll strategy (called when the attached overlay is attached to a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.enable;\n    /**\n     * Disable this scroll strategy (called when the attached overlay is detached from a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.disable;\n    /**\n     * Attaches this `ScrollStrategy` to an overlay.\n     * @type {?}\n     */\n    ScrollStrategy.prototype.attach;\n    /**\n     * Detaches the scroll strategy from the current overlay.\n     * @type {?|undefined}\n     */\n    ScrollStrategy.prototype.detach;\n}\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/close-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\nfunction CloseScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Amount of pixels the user has to scroll before the overlay is closed.\n     * @type {?|undefined}\n     */\n    CloseScrollStrategyConfig.prototype.threshold;\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._initialScrollPosition;\n    /**\n     * Detaches the overlay ref and disables the scroll strategy.\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._detach;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/noop-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/scroll-clip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/reposition-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\nfunction RepositionScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Time in milliseconds to throttle the scroll events.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.scrollThrottle;\n    /**\n     * Whether to close the overlay once the user has scrolled away completely.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.autoClose;\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._document;\n    /**\n     * Do nothing on scroll.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.noop;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.close;\n    /**\n     * Block scrolling.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.block;\n    /**\n     * Update the overlay's position on scroll.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.reposition;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Strategy with which to position the overlay.\n     * @type {?}\n     */\n    OverlayConfig.prototype.positionStrategy;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    OverlayConfig.prototype.scrollStrategy;\n    /**\n     * Custom class to add to the overlay pane.\n     * @type {?}\n     */\n    OverlayConfig.prototype.panelClass;\n    /**\n     * Whether the overlay has a backdrop.\n     * @type {?}\n     */\n    OverlayConfig.prototype.hasBackdrop;\n    /**\n     * Custom class to add to the backdrop\n     * @type {?}\n     */\n    OverlayConfig.prototype.backdropClass;\n    /**\n     * The width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.width;\n    /**\n     * The height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.height;\n    /**\n     * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minWidth;\n    /**\n     * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minHeight;\n    /**\n     * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxWidth;\n    /**\n     * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     * @type {?}\n     */\n    OverlayConfig.prototype.direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    OverlayConfig.prototype.disposeOnNavigation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\nfunction OriginConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originX;\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originY;\n}\n/**\n * A connection point on the overlay element.\n * @record\n */\nfunction OverlayConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayX;\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayY;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\nif (false) {\n    /**\n     * X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originX;\n    /**\n     * Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originY;\n    /**\n     * X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayX;\n    /**\n     * Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayY;\n    /**\n     * Offset along the X axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetX;\n    /**\n     * Offset along the Y axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetY;\n    /**\n     * Class(es) to be applied to the panel while this position is active.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.panelClass;\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\nif (false) {\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginOutsideView;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayOutsideView;\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * The position used as a result of this change.\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.connectionPair;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Currently attached overlays in the order they were attached.\n     * @type {?}\n     */\n    OverlayKeyboardDispatcher.prototype._attachedOverlays;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._isAttached;\n    /**\n     * Keyboard event listener that will be attached to the body.\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._keydownListener;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n * @type {?}\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(((/** @type {?} */ (window))).__karma__ || ((/** @type {?} */ (window))).jasmine);\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     * @param {?=} _platform\n     */\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        /** @type {?} */\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            /** @type {?} */\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                (/** @type {?} */ (oppositePlatformContainers[i].parentNode)).removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._containerElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._document;\n    /**\n     * @deprecated `platform` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._platform;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        this._keydownEventsObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._keydownEvents.subscribe(observer);\n            this._keydownEventSubscriptions++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._keydownEventSubscriptions--;\n            });\n        }));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEventsObservable;\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClick;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._attachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._detachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._scrollStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._locationChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClickHandler;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._previousHostParent;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keydownEventsObservable;\n    /**\n     * Stream of keydown events dispatched to this overlay.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEvents;\n    /**\n     * Amount of subscriptions to the keydown events.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEventSubscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._portalOutlet;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._host;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._pane;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._location;\n}\n/**\n * Size properties for an overlay.\n * @record\n */\nfunction OverlaySizeConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.width;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.height;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minHeight;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/flexible-connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            /** @type {?} */\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        /** @type {?} */\n        const hasExactPosition = this._hasExactPosition();\n        /** @type {?} */\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: '', bottom: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: '', right: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        if (origin instanceof HTMLElement) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * Whether we're performing the very first positioning of the overlay.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isInitialRender;\n    /**\n     * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastBoundingBoxSize;\n    /**\n     * Whether the overlay was pushed in a previous positioning.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isPushed;\n    /**\n     * Whether the overlay can be pushed on-screen on the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._canPush;\n    /**\n     * Whether the overlay can grow via flexible width/height after the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._growAfterOpen;\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasFlexibleDimensions;\n    /**\n     * Whether the overlay position is locked.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionLocked;\n    /**\n     * Cached origin dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._originRect;\n    /**\n     * Cached overlay dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRect;\n    /**\n     * Cached viewport dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRect;\n    /**\n     * Amount of space that must be maintained between the overlay and the edge of the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportMargin;\n    /**\n     * The Scrollable containers used to check scrollable view properties on position change.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._scrollables;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._preferredPositions;\n    /**\n     * The origin element against which the overlay will be positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._origin;\n    /**\n     * The overlay pane element.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._pane;\n    /**\n     * Whether the strategy has been disposed of already.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._boundingBox;\n    /**\n     * The last position to have been calculated as the best fit position.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastPosition;\n    /**\n     * Subject that emits whenever the position changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionChanges;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._resizeSubscription;\n    /**\n     * Default offset for the overlay along the x axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetX;\n    /**\n     * Default offset for the overlay along the y axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetY;\n    /**\n     * Selector to be used when finding the elements on which to set the transform origin.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._transformOriginSelector;\n    /**\n     * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._appliedPanelClasses;\n    /**\n     * Amount by which the overlay was pushed in each axis during the last time it was positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._previousPushAmount;\n    /**\n     * Observable sequence of position changes.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.positionChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayContainer;\n}\n/**\n * A simple (x, y) coordinate.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Record of measurements for how an overlay (at a given position) fits into the viewport.\n * @record\n */\nfunction OverlayFit() { }\nif (false) {\n    /**\n     * Whether the overlay fits completely in the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.isCompletelyWithinViewport;\n    /**\n     * Whether the overlay fits in the viewport on the y-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportVertically;\n    /**\n     * Whether the overlay fits in the viewport on the x-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportHorizontally;\n    /**\n     * The total visible area (in px^2) of the overlay inside the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.visibleArea;\n}\n/**\n * Record of the measurments determining whether an overlay will fit in a specific position.\n * @record\n */\nfunction FallbackPosition() { }\nif (false) {\n    /** @type {?} */\n    FallbackPosition.prototype.position;\n    /** @type {?} */\n    FallbackPosition.prototype.originPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayFit;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayRect;\n}\n/**\n * Position and size of the overlay sizing wrapper for a specific position.\n * @record\n */\nfunction BoundingBoxRect() { }\nif (false) {\n    /** @type {?} */\n    BoundingBoxRect.prototype.top;\n    /** @type {?} */\n    BoundingBoxRect.prototype.left;\n    /** @type {?} */\n    BoundingBoxRect.prototype.bottom;\n    /** @type {?} */\n    BoundingBoxRect.prototype.right;\n    /** @type {?} */\n    BoundingBoxRect.prototype.height;\n    /** @type {?} */\n    BoundingBoxRect.prototype.width;\n}\n/**\n * Record of measures determining how well a given position will fit with flexible dimensions.\n * @record\n */\nfunction FlexibleFit() { }\nif (false) {\n    /** @type {?} */\n    FlexibleFit.prototype.position;\n    /** @type {?} */\n    FlexibleFit.prototype.origin;\n    /** @type {?} */\n    FlexibleFit.prototype.overlayRect;\n    /** @type {?} */\n    FlexibleFit.prototype.boundingBoxRect;\n}\n/**\n * A connected position as specified by the user.\n * @record\n */\nfunction ConnectedPosition() { }\nif (false) {\n    /** @type {?} */\n    ConnectedPosition.prototype.originX;\n    /** @type {?} */\n    ConnectedPosition.prototype.originY;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayX;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.weight;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetX;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.panelClass;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n * @param {?} input\n * @return {?}\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\nif (false) {\n    /**\n     * Reference to the underlying position strategy to which all the API calls are proxied.\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._positionStrategy;\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._direction;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._preferredPositions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/global-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        /** @type {?} */\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        /** @type {?} */\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._cssPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._topOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._bottomOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._leftOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._rightOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._alignItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._justifyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._isDisposed;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/overlay-position-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._overlayContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._appRef;\n    /**\n     * Scrolling strategies that can be used when creating an overlay.\n     * @type {?}\n     */\n    Overlay.prototype.scrollStrategies;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._overlayContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._positionBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._directionality;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._location;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @param {?=} config\n     * @return {?}\n     */\n    (config) => overlay.scrollStrategies.reposition(config));\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    CdkOverlayOrigin.prototype.elementRef;\n}\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_lockPosition;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_flexibleDimensions;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_growAfterOpen;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._templatePortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._lockPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._growAfterOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._flexibleDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._backdropSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetX;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetY;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._scrollStrategyFactory;\n    /**\n     * Origin for the connected overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.origin;\n    /**\n     * Registered connected position pairs.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionStrategy;\n    /**\n     * The width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.width;\n    /**\n     * The height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.height;\n    /**\n     * The min width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minWidth;\n    /**\n     * The min height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minHeight;\n    /**\n     * The custom class to be set on the backdrop element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClass;\n    /**\n     * The custom class to add to the overlay pane element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.panelClass;\n    /**\n     * Margin between the overlay and the viewport edges.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.viewportMargin;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.scrollStrategy;\n    /**\n     * Whether the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.open;\n    /**\n     * CSS selector which to set the transform origin.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.transformOriginSelector;\n    /**\n     * Event emitted when the backdrop is clicked.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClick;\n    /**\n     * Event emitted when the position has changed.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionChange;\n    /**\n     * Event emitted when the overlay has been attached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.attach;\n    /**\n     * Event emitted when the overlay has been detached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.detach;\n    /**\n     * Emits when there are keyboard events that are targeted at the overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.overlayKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._dir;\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule],\n        ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin,\n        ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/fullscreen-overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     * @param {?=} platform\n     */\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenEventName;\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenListener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\nfunction ComponentType() { }\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Portal.prototype._attachedHost;\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\nif (false) {\n    /**\n     * The type of the component that will be instantiated for attachment.\n     * @type {?}\n     */\n    ComponentPortal.prototype.component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     * @type {?}\n     */\n    ComponentPortal.prototype.viewContainerRef;\n    /**\n     * [Optional] Injector used for the instantiation of the component.\n     * @type {?}\n     */\n    ComponentPortal.prototype.injector;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     * @type {?}\n     */\n    ComponentPortal.prototype.componentFactoryResolver;\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\nif (false) {\n    /**\n     * The embedded template that will be used to instantiate an embedded View in the host.\n     * @type {?}\n     */\n    TemplatePortal.prototype.templateRef;\n    /**\n     * Reference to the ViewContainer into which the template will be stamped out.\n     * @type {?}\n     */\n    TemplatePortal.prototype.viewContainerRef;\n    /**\n     * Contextual data to be passed in to the embedded view.\n     * @type {?}\n     */\n    TemplatePortal.prototype.context;\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n * @template T\n */\nclass DomPortal extends Portal {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\nif (false) {\n    /**\n     * DOM node hosting the portal's content.\n     * @type {?}\n     */\n    DomPortal.prototype.element;\n}\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\nfunction PortalOutlet() { }\nif (false) {\n    /**\n     * Attaches a portal to this outlet.\n     * @param {?} portal\n     * @return {?}\n     */\n    PortalOutlet.prototype.attach = function (portal) { };\n    /**\n     * Detaches the currently attached portal from this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.detach = function () { };\n    /**\n     * Performs cleanup before the outlet is destroyed.\n     * @return {?}\n     */\n    PortalOutlet.prototype.dispose = function () { };\n    /**\n     * Whether there is currently a portal attached to this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.hasAttached = function () { };\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * The portal currently attached to the host.\n     * @type {?}\n     * @protected\n     */\n    BasePortalOutlet.prototype._attachedPortal;\n    /**\n     * A function that will permanently dispose this host.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._disposeFn;\n    /**\n     * Whether this host has already been permanently disposed.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._isDisposed;\n    /** @type {?} */\n    BasePortalOutlet.prototype.attachDomPortal;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachTemplatePortal = function (portal) { };\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/dom-portal-outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     * @param {?=} _document\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._document;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.attachDomPortal;\n    /**\n     * Element into which the content is projected.\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.outletElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._defaultInjector;\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                if (anchorNode.parentNode) {\n                    (/** @type {?} */ (anchorNode.parentNode)).replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(((/** @type {?} */ (ref.hostView))).rootNodes[0]);\n        }\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Gets the root node of the portal outlet.\n     * @private\n     * @return {?}\n     */\n    _getRootNode() {\n        /** @type {?} */\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (/** @type {?} */ ((nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : (/** @type {?} */ (nativeElement.parentNode)))));\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkPortalOutlet.ngAcceptInputType_portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._document;\n    /**\n     * Whether the portal component is initialized.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._isInitialized;\n    /**\n     * Reference to the currently-attached component/view ref.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._attachedRef;\n    /**\n     * Emits when a portal is attached to the outlet.\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attached;\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._viewContainerRef;\n}\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective], exports: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-injector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._parentInjector;\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._customTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, ElementRef, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n/**\n * A strategy that dictates which items should be rendered in the viewport.\n * @record\n */\nfunction VirtualScrollStrategy() { }\nif (false) {\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    VirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.attach = function (viewport) { };\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.detach = function () { };\n    /**\n     * Called when the viewport is scrolled (debounced using requestAnimationFrame).\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentScrolled = function () { };\n    /**\n     * Called when the length of the data changes.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onDataLengthChanged = function () { };\n    /**\n     * Called when the range of items rendered in the DOM has changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentRendered = function () { };\n    /**\n     * Called when the offset of the rendered items changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onRenderedOffsetChanged = function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.scrollToIndex = function (index, behavior) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/fixed-size-virtual-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._scrolledIndexChange;\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @type {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * The attached viewport.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._viewport;\n    /**\n     * The size of the items in the virtually scrolling list.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._itemSize;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._minBufferPx;\n    /**\n     * The number of buffer items to render beyond the edge of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._maxBufferPx;\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(( /**\n                         * @return {?}\n                         */() => CdkFixedSizeVirtualScroll))]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(( /**\n                                 * @return {?}\n                                 */() => CdkFixedSizeVirtualScroll))]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_maxBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._maxBufferPx;\n    /**\n     * The scroll strategy used by this directive.\n     * @type {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scroll-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ ScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * Subject for notifying that a registered scrollable reference element has been scrolled.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolled;\n    /**\n     * Keeps track of the global `scroll` and `resize` subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype._globalSubscription;\n    /**\n     * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolledCount;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype.scrollContainers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrollable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._elementScrolled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.scrollDispatcher;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.ngZone;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/viewport-ruler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Object that holds the scroll position of the viewport in each direction.\n * @record\n */\nfunction ViewportScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ViewportScrollPosition.prototype.top;\n    /** @type {?} */\n    ViewportScrollPosition.prototype.left;\n}\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     */\n    constructor(_platform, ngZone) {\n        this._platform = _platform;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ ViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * Cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._viewportSize;\n    /**\n     * Stream of viewport change events.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._change;\n    /**\n     * Subscription to streams that invalidate the cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._invalidateCache;\n    /**\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-viewport.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     * @param {?=} viewportRuler\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        /**\n         * Subscription to changes in the viewport size.\n         */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.checkViewportSize();\n            }));\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the viewport is detached from a CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._detachedSubject;\n    /**\n     * Emits when the rendered range changes.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRangeSubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._orientation;\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrolledIndexChange;\n    /**\n     * The element that wraps the rendered content.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._contentWrapper;\n    /**\n     * A stream that emits whenever the rendered range changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.renderedRangeStream;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._totalContentSize;\n    /**\n     * A string representing the `style.width` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentWidth;\n    /**\n     * A string representing the `style.height` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentHeight;\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentTransform;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRange;\n    /**\n     * The length of the data bound to this viewport (in number of items).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._dataLength;\n    /**\n     * The size of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportSize;\n    /**\n     * the currently attached CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._forOf;\n    /**\n     * The last rendered content offset that was set.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffset;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffsetNeedsRewrite;\n    /**\n     * Whether there is a pending change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._isChangeDetectionPending;\n    /**\n     * A list of functions to run after the next change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._runAfterChangeDetection;\n    /**\n     * Subscription to changes in the viewport size.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportChanges;\n    /** @type {?} */\n    CdkVirtualScrollViewport.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-for-of.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: (/** @type {?} */ (this._cdkVirtualForOf)),\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the rendered view of the data changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.viewChange;\n    /**\n     * Subject that emits when a new DataSource instance is given.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._dataSourceChanges;\n    /** @type {?} */\n    CdkVirtualForOf.prototype._cdkVirtualForOf;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._cdkVirtualForTrackBy;\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.cdkVirtualForTemplateCacheSize;\n    /**\n     * Emits whenever the data in the current DataSource changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.dataStream;\n    /**\n     * The differ used to calculate changes to the data.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differ;\n    /**\n     * The most recent data emitted from the DataSource.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._data;\n    /**\n     * The currently rendered items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedItems;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedRange;\n    /**\n     * The template cache used to hold on ot template instancess that have been stamped out, but don't\n     * currently need to be rendered. These instances will be reused in the future rather than\n     * stamping out brand new ones.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._templateCache;\n    /**\n     * Whether the rendered data should be updated during the next ngDoCheck cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._needsUpdate;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._destroyed;\n    /**\n     * The view container to add items to.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewContainerRef;\n    /**\n     * The template to use when stamping out new items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._template;\n    /**\n     * The set of available differs.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differs;\n    /**\n     * The virtual scrolling viewport that these items are being rendered in.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewport;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrolling-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[BidiModule, PlatformModule],\n        BidiModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll,\n        CdkScrollable,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule, PlatformModule]; }, exports: function () { return [BidiModule,\n        CdkFixedSizeVirtualScroll,\n        CdkScrollable,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PlatformModule],\n                exports: [\n                    BidiModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { SecurityContext, Injectable, Optional, Inject, ErrorHandler, ɵɵdefineInjectable, ɵɵinject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of, throwError, forkJoin } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/common/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Options that can be used to configure how an icon or the icons in an icon set are presented.\n * @record\n */\nfunction IconOptions() { }\nif (false) {\n    /**\n     * View box to set on the icon.\n     * @type {?|undefined}\n     */\n    IconOptions.prototype.viewBox;\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n    /**\n     * @param {?} data\n     * @param {?=} options\n     */\n    constructor(data, options) {\n        this.options = options;\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    SvgIconConfig.prototype.url;\n    /** @type {?} */\n    SvgIconConfig.prototype.svgElement;\n    /** @type {?} */\n    SvgIconConfig.prototype.options;\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    /**\n     * @param {?} _httpClient\n     * @param {?} _sanitizer\n     * @param {?} document\n     * @param {?=} _errorHandler\n     */\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIcon(iconName, url, options) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral, options);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSet(url, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    registerFontClassAlias(alias, className = alias) {\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    setDefaultFontSetClass(className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    getSvgIconFromUrl(safeUrl) {\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg))), map((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => cloneSvg(svg))));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        const key = iconKey(namespace, name);\n        /** @type {?} */\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => config.svgElement = svg)), map((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => cloneSvg(svg))));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        const iconSetFetchRequests = iconSetConfigs\n            .filter((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => !iconSetConfig.svgElement))\n            .map((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                /** @type {?} */\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                /** @type {?} */\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                // @breaking-change 9.0.0 _errorHandler parameter to be made required\n                if (this._errorHandler) {\n                    this._errorHandler.handleError(new Error(errorMessage));\n                }\n                else {\n                    console.error(errorMessage);\n                }\n                return of(null);\n            })));\n        }));\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        })));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchUrl(config.url)\n            .pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => this._createSvgElementForSingleIcon(svgText, config.options))));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconSetFromConfig(config) {\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        })));\n    }\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @param {?=} options\n     * @return {?}\n     */\n    _createSvgElementForSingleIcon(responseText, options) {\n        /** @type {?} */\n        const svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, options);\n        return svg;\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @param {?=} options\n     * @return {?}\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        /** @type {?} */\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        const iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)), options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    _svgElementFromString(str) {\n        /** @type {?} */\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        const svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _toSvgElement(element) {\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        /** @type {?} */\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @param {?=} options\n     * @return {?}\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    _fetchUrl(safeUrl) {\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        const req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize((/**\n         * @return {?}\n         */\n        () => this._inProgressUrlFetches.delete(url))), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        /** @type {?} */\n        const configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler, 8)); };\n/** @nocollapse */\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\n/** @nocollapse */ MatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._svgIconConfigs;\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._iconSetConfigs;\n    /**\n     * Cache for icons loaded by direct URLs.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._cachedIconsByUrl;\n    /**\n     * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._inProgressUrlFetches;\n    /**\n     * Map from font identifiers to their CSS class names. Used for icon fonts.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._fontCssClassesByAlias;\n    /**\n     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n     * The default 'material-icons' value assumes that the material icon font has been loaded as\n     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._defaultFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._httpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._errorHandler;\n}\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @param {?=} errorHandler\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document, errorHandler) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), ErrorHandler],\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nclass MatIconBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatIconBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * Stubbed out location for `MatIcon`.\n * \\@docs-private\n * @record\n */\nfunction MatIconLocation() { }\nif (false) {\n    /** @type {?} */\n    MatIconLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = /**\n * @param {?} attr\n * @return {?}\n */\nattr => `[${attr}]`;\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nconst funcIriAttributeSelector = funcIriAttributes.map((ɵ0)).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _iconRegistry\n     * @param {?} ariaHidden\n     * @param {?=} _location\n     * @param {?=} _errorHandler\n     */\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     * @return {?}\n     */\n    get inline() {\n        return this._inline;\n    }\n    /**\n     * @param {?} inline\n     * @return {?}\n     */\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /**\n     * Font set that the icon is a part of.\n     * @return {?}\n     */\n    get fontSet() { return this._fontSet; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /**\n     * Name of an icon within a font set.\n     * @return {?}\n     */\n    get fontIcon() { return this._fontIcon; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(`Invalid icon name: \"${iconName}\"`);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        /** @type {?} */\n        const svgIconChanges = changes['svgIcon'];\n        if (svgIconChanges) {\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe((/**\n                 * @param {?} svg\n                 * @return {?}\n                 */\n                svg => this._setSvgElement(svg)), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    /** @type {?} */\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    // @breaking-change 9.0.0 _errorHandler parameter to be made required.\n                    if (this._errorHandler) {\n                        this._errorHandler.handleError(new Error(errorMessage));\n                    }\n                    else {\n                        console.error(errorMessage);\n                    }\n                }));\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        /** @type {?} */\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        const styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearSvgElement() {\n        /** @type {?} */\n        const layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        const elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    _prependPathToReferences(path) {\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((/**\n             * @param {?} attrs\n             * @param {?} element\n             * @return {?}\n             */\n            (attrs, element) => {\n                attrs.forEach((/**\n                 * @param {?} attr\n                 * @return {?}\n                 */\n                attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                }));\n            }));\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        /** @type {?} */\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                /** @type {?} */\n                const elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                const value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            }));\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler, 8)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 4, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatIcon.ngAcceptInputType_inline;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._inline;\n    /**\n     * Name of the icon in the SVG icon set.\n     * @type {?}\n     */\n    MatIcon.prototype.svgIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontIconClass;\n    /**\n     * Keeps track of the current page path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousPath;\n    /**\n     * Keeps track of the elements and attributes that we've prefixed with the current path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._elementsWithExternalReferences;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._iconRegistry;\n    /**\n     * @deprecated `location` parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._errorHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n\n//# sourceMappingURL=icon.js.map","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r158 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r158.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r158.disabled);\n} }\nconst _c4 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c5 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSelectionList)))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    this.options.find((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.selected)) ? this.selectAll() : this.deselectAll();\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelectionList_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelectionList_blur_HostBindingHandler() { return ctx._onTouched(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","import { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, END, hasModifierKey, HOME, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, query, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r146 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r146); const ctx_r145 = ɵngcc0.ɵɵnextContext(); return ctx_r145._handleKeydown($event); })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r146); const ctx_r147 = ɵngcc0.ɵɵnextContext(); return ctx_r147.closed.emit(\"click\"); })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r146); const ctx_r148 = ɵngcc0.ɵɵnextContext(); return ctx_r148._onAnimationStart($event); })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r146); const ctx_r149 = ɵngcc0.ɵɵnextContext(); return ctx_r149._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r144 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r144.panelId)(\"ngClass\", ctx_r144._classList)(\"@transformMenu\", ctx_r144._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r144.ariaLabel || null)(\"aria-labelledby\", ctx_r144.ariaLabelledby || null)(\"aria-describedby\", ctx_r144.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        (/** @type {?} */ (element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._outlet;\n    /**\n     * Emits when the menu content has been attached.\n     * @type {?}\n     */\n    MatMenuContent.prototype._attached;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._template;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n/**\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction MatMenuPanel() { }\nif (false) {\n    /** @type {?} */\n    MatMenuPanel.prototype.xPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.yPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.overlapTrigger;\n    /** @type {?} */\n    MatMenuPanel.prototype.templateRef;\n    /** @type {?} */\n    MatMenuPanel.prototype.close;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.parentMenu;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.direction;\n    /** @type {?} */\n    MatMenuPanel.prototype.focusFirstItem;\n    /** @type {?} */\n    MatMenuPanel.prototype.resetActiveItem;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.setPositionClasses;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.lazyContent;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.backdropClass;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.hasBackdrop;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.panelId;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.addItem;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.removeItem;\n    /**\n     * @param {?} depth\n     * @return {?}\n     */\n    MatMenuPanel.prototype.setElevation = function (depth) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * ARIA role for the menu item.\n         */\n        this.role = 'menuitem';\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Stream that emits when the menu item is focused.\n         */\n        this._focused = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disableRipple;\n    /**\n     * ARIA role for the menu item.\n     * @type {?}\n     */\n    MatMenuItem.prototype.role;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._document;\n    /**\n     * Stream that emits when the menu item is hovered.\n     * @type {?}\n     */\n    MatMenuItem.prototype._hovered;\n    /**\n     * Stream that emits when the menu item is focused.\n     * @type {?}\n     */\n    MatMenuItem.prototype._focused;\n    /**\n     * Whether the menu item is highlighted.\n     * @type {?}\n     */\n    MatMenuItem.prototype._highlighted;\n    /**\n     * Whether the menu item acts as a trigger for a sub-menu.\n     * @type {?}\n     */\n    MatMenuItem.prototype._triggersSubmenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._focusMonitor;\n    /** @type {?} */\n    MatMenuItem.prototype._parentMenu;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-menu` options that can be overridden.\n * @record\n */\nfunction MatMenuDefaultOptions() { }\nif (false) {\n    /**\n     * The x-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.xPosition;\n    /**\n     * The y-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.yPosition;\n    /**\n     * Whether the menu should overlap the menu trigger.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.overlapTrigger;\n    /**\n     * Class to be applied to the menu's backdrop.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.backdropClass;\n    /**\n     * Whether the menu has a backdrop.\n     * @type {?|undefined}\n     */\n    MatMenuDefaultOptions.prototype.hasBackdrop;\n}\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n * @type {?}\n */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n/** @type {?} */\nlet menuPanelUid = 0;\n/**\n * Base class with all of the `MatMenu` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Only the direct descendant menu items.\n         */\n        this._directDescendantItems = new QueryList();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        /** @type {?} */\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = false;\n            }));\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = true;\n            }));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe((/**\n         * @return {?}\n         */\n        () => this.closed.emit('tab')));\n        // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._focused)))))).subscribe((/**\n         * @param {?} focusedItem\n         * @return {?}\n         */\n        focusedItem => this._keyManager.updateActiveItem(focusedItem)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        /** @type {?} */\n        const itemChanges = (/** @type {?} */ (this._directDescendantItems.changes));\n        return (/** @type {?} */ (itemChanges.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._hovered))))))));\n    }\n    /*\n       * Registers a menu item with the menu.\n       * @docs-private\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 9.0.0\n       */\n    /**\n     * @param {?} _item\n     * @return {?}\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 9.0.0\n     * @param {?} _item\n     * @return {?}\n     */\n    removeItem(_item) { }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._focusFirstItem(origin)));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _focusFirstItem(origin) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            /** @type {?} */\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        /** @type {?} */\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${elevation}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => c.startsWith('mat-elevation-z')));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     * @private\n     * @return {?}\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._directDescendantItems.reset(items.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => item._parentMenu === this)));\n            this._directDescendantItems.notifyOnChanges();\n        }));\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n/** @nocollapse */\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MatMenuContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_overlapTrigger;\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._keyManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._xPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._yPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousElevation;\n    /**\n     * All items inside the menu. Includes items nested inside another menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._allItems;\n    /**\n     * Only the direct descendant menu items.\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._directDescendantItems;\n    /**\n     * Subscription to tab events on the menu panel\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._tabSubscription;\n    /**\n     * Config object to be passed into the menu's ngClass\n     * @type {?}\n     */\n    _MatMenuBase.prototype._classList;\n    /**\n     * Current state of the panel animation.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._panelAnimationState;\n    /**\n     * Emits whenever an animation on the menu completes.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._animationDone;\n    /**\n     * Whether the menu is animating.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._isAnimating;\n    /**\n     * Parent menu of the current menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.parentMenu;\n    /**\n     * Layout direction of the menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.direction;\n    /**\n     * Class to be added to the backdrop element.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.backdropClass;\n    /**\n     * aria-label for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabel;\n    /**\n     * aria-labelledby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabelledby;\n    /**\n     * aria-describedby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaDescribedby;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.templateRef;\n    /**\n     * List of the items inside of a menu.\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.items;\n    /**\n     * Menu content that will be rendered lazily.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.lazyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._overlapTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousPanelClass;\n    /**\n     * Event emitted when the menu is closed.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.closed;\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.close;\n    /** @type {?} */\n    _MatMenuBase.prototype.panelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._defaultOptions;\n}\n/**\n * \\@docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs.\n */\nclass MatMenu extends _MatMenuBase {\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return ɵMatMenu_BaseFactory(t || MatMenu); };\nMatMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenu, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatMenu_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatMenu);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Directive\n    }], null, null); })();\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/**\n * \\@docs-public MatMenu\n */\n// tslint:disable-next-line:class-name\nclass _MatMenu extends MatMenu {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} defaultOptions\n     */\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ɵfac = function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/** @nocollapse */\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ],\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @type {?}\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * Options for binding a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * Directive applied to an element that should trigger a `mat-menu`.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (/**\n         * @return {?}\n         */\n        () => this._openedBy = 'touch');\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * References the menu instance that the trigger is associated with.\n     * @return {?}\n     */\n    get menu() { return this._menu; }\n    /**\n     * @param {?} menu\n     * @return {?}\n     */\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            this._menuCloseSubscription = menu.close.asObservable().subscribe((/**\n             * @param {?} reason\n             * @return {?}\n             */\n            reason => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        /** @type {?} */\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition((/** @type {?} */ (overlayConfig.positionStrategy)));\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe((/**\n         * @return {?}\n         */\n        () => this.closeMenu()));\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @private\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        this._restoreFocus();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                event => event.toState === 'void')), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: (/**\n                     * @return {?}\n                     */\n                    () => (/** @type {?} */ (menu.lazyContent)).detach()),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: (/**\n                     * @return {?}\n                     */\n                    () => this._setIsMenuOpen(false))\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @private\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the menu was open.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    /**\n     * @private\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @private\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions((/** @type {?} */ (config.positionStrategy)));\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @private\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                (/** @type {?} */ (this.menu.setPositionClasses))(posX, posY);\n            }));\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @private\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @private\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = (/** @type {?} */ (this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = (/** @type {?} */ (this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active !== this._menuItemInstance)), filter((/**\n         * @return {?}\n         */\n        () => this._menuOpen))) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @private\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active === this._menuItemInstance && !active.disabled)), delay(0, asapScheduler))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.openMenu()));\n            }\n            else {\n                this.openMenu();\n            }\n        }));\n    }\n    /**\n     * Gets the portal that should be attached to the overlay.\n     * @private\n     * @return {?}\n     */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._closingActionsSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._hoverSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuCloseSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._scrollStrategy;\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._handleTouchStart;\n    /** @type {?} */\n    MatMenuTrigger.prototype._openedBy;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menu;\n    /**\n     * Data to be passed along to any lazily-rendered content.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuData;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.restoreFocus;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuOpened;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuOpen;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuClosed;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._parentMenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuItemInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger,\n        MatMenuContent]; }, exports: function () { return [MatMenuTrigger,\n        MatMenuContent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ],\n        _MatMenuDirectivesModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu,\n        MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule]; }, exports: function () { return [_MatMenu,\n        MatMenuItem,\n        _MatMenuDirectivesModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [_MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-positions.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenu, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n//# sourceMappingURL=menu.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r135 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r135.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r138 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r138.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r136 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r136.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r142 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r142); const ctx_r141 = ɵngcc0.ɵɵnextContext(); return ctx_r141._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r142); const ctx_r143 = ɵngcc0.ɵɵnextContext(); return ctx_r143._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r137 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r137._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r137._transformOrigin)(\"font-size\", ctx_r137._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r137.panelClass)(\"@transformPanel\", ctx_r137.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r133 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r133)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r153 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r153); const ctx_r152 = ɵngcc0.ɵɵnextContext(); return ctx_r152._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r150 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r150._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r157 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r157); const ctx_r156 = ɵngcc0.ɵɵnextContext(); return ctx_r156._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r154 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r154._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ScrollingModule,\n            PlatformModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule]; }, exports: function () { return [MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ScrollingModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","import { Directive, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatToolbar.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._checkToolbarMixedModes()));\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @private\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !(node.classList && node.classList.contains('mat-toolbar-row'))))\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)))\n            .some((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !!(node.textContent && node.textContent.trim())));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._document;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar,\n        MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar,\n        MatToolbarRow,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n//# sourceMappingURL=toolbar.js.map","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl\r\n} from \"@angular/forms\";\r\nimport { CUSTOM_VALIDATORS } from \"src/utils/custom-validators\";\r\nimport { AdminService } from \"src/app/services/admin.service\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\nimport { USER_ROLE } from \"src/app/interfaces/user.interface\";\r\n\r\n@Component({\r\n  selector: \"app-add-user\",\r\n  templateUrl: \"./add-user.component.html\",\r\n  styleUrls: [\"./add-user.component.scss\"]\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n  form: FormGroup;\r\n  errorMatcher = new LoginErrorStateMatcher();\r\n  usernameError: string;\r\n\r\n  constructor(formbuilder: FormBuilder, private adminService: AdminService) {\r\n    this.form = formbuilder.group({\r\n      username: [\"\", Validators.required],\r\n      password: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n          CUSTOM_VALIDATORS.atLeastOneNumber,\r\n          CUSTOM_VALIDATORS.upperAndLowerLetters\r\n        ]\r\n      ],\r\n      firstName: [\"\", Validators.required],\r\n      lastName: [\"\", Validators.required],\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      role: [USER_ROLE.USER, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  sendData() {\r\n    if (this.form.invalid) {\r\n      this.form.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    delete this.usernameError;\r\n\r\n    this.adminService.createUser(this.form.value).subscribe(\r\n      user => {\r\n        console.log(user);\r\n      },\r\n      err => {\r\n        // Error (user že obstaja)\r\n        this.usernameError = err.body.message;\r\n        this.username.setErrors({ error: true });\r\n      }\r\n    );\r\n  }\r\n\r\n  get username() {\r\n    return this.form.get(\"username\");\r\n  }\r\n}\r\n\r\nclass LoginErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl): boolean {\r\n    return control.touched && !!control.errors;\r\n  }\r\n}\r\n","<div class=\"add-user-container\">\r\n  <form class=\"add-user-form\" [formGroup]=\"form\">\r\n    <div>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Username</mat-label>\r\n        <input\r\n          matInput\r\n          formControlName=\"username\"\r\n          [errorStateMatcher]=\"errorMatcher\"\r\n        />\r\n        <mat-error *ngIf=\"usernameError\">{{ usernameError }}</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\" />\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>First name</mat-label>\r\n        <input matInput formControlName=\"firstName\" />\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Last name</mat-label>\r\n        <input matInput formControlName=\"lastName\" />\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-form-field appearance=\"standard\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput formControlName=\"email\" />\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>Role</mat-label>\r\n      <mat-select formControlName=\"role\">\r\n        <mat-option value=\"ADMIN\">\r\n          ADMIN\r\n        </mat-option>\r\n        <mat-option value=\"USER\">\r\n          USER\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      style=\"margin-top: 10px;\"\r\n      (click)=\"sendData()\"\r\n    >\r\n      Add user\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-boards',\n  templateUrl: './boards.component.html',\n  styleUrls: ['./boards.component.scss']\n})\nexport class BoardsComponent implements OnInit {\n\n  l1 = [\n    \"card 1\",\n  ]\n\n  l2 = [\n    \"card 1\", \n    \"card 2\",\n  ]\n\n  l3 = [\n    \"card 1\", \n    \"card 2\", \n    \"card 3\", \n    \"card 4\", \n    \"card 5\", \n  ]\n\n  l4 = [\n    \"card 1\", \n    \"card 2\", \n    \"card 3\", \n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"board-container\">\n    <div class=\"board\" cdkDropList [cdkDropListData]=\"l1\">\n        <div class=\"title\">Unassigned!</div>\n        <div class=\"cards\">\n            <mat-card *ngFor=\"let card of l1\">{{card}}</mat-card>\n        </div>\n    </div>\n    <div class=\"board\" cdkDropList>\n        <div class=\"title\">Assigned!</div>\n        <div class=\"cards\">\n            <mat-card *ngFor=\"let card of l2\">{{card}}</mat-card>\n        </div>\n    </div>\n    <div class=\"board\" cdkDropList>\n        <div class=\"title\">Active!</div>\n        <div class=\"cards\">\n            <mat-card *ngFor=\"let card of l3\">{{card}}</mat-card>\n        </div>\n    </div>\n    <div class=\"board\" cdkDropList>\n        <div class=\"title\">Done!</div>\n        <div class=\"cards\">\n            <mat-card *ngFor=\"let card of l4\">{{card}}</mat-card>\n        </div>\n    </div>\n</div>\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { DashboardComponent } from \"./dashboard.component\";\r\nimport { AddUserComponent } from \"./add-user/add-user.component\";\r\nimport { BoardsComponent } from './boards/boards.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: DashboardComponent,\r\n    children: [\r\n      {\r\n        path: \"add-user\",\r\n        component: AddUserComponent\r\n      },\r\n      {\r\n        path: \"\",\r\n        component: BoardsComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { RootStore } from \"../store/root.store\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.scss\"]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  user$: Observable<User>;\r\n\r\n  constructor(private rootStore: RootStore, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.user$ = this.rootStore.userStore.user$;\r\n  }\r\n\r\n  onLogout() {\r\n    this.rootStore.userStore.clearSettings();\r\n    this.router.navigate([\"/auth\", \"login\"]);\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <span>KanBan</span>\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <button\r\n      mat-icon-button\r\n      color=\"white\"\r\n      aria-label=\"Example icon-button with a heart icon\"\r\n      routerLink=\"/dashboard\"\r\n    >\r\n      <mat-icon>home</mat-icon>\r\n    </button>\r\n    <button\r\n      mat-icon-button\r\n      color=\"white\"\r\n      aria-label=\"Example icon-button with a heart icon\"\r\n      [matMenuTriggerFor]=\"menu\"\r\n    >\r\n      <mat-icon>account_circle</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-raised-button routerLink=\"/dashboard/add-user\">\r\n        Add new user\r\n      </button>\r\n      <br />\r\n      <button mat-raised-button color=\"warn\" (click)=\"onLogout()\">\r\n        <mat-icon>exit_to_app</mat-icon>\r\n      </button>\r\n    </mat-menu>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\r\nimport { DashboardComponent } from \"./dashboard.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AddUserComponent } from \"./add-user/add-user.component\";\r\nimport { MaterialModule } from \"./material\";\r\nimport { BoardsComponent } from './boards/boards.component';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\n\r\n@NgModule({\r\n  declarations: [DashboardComponent, AddUserComponent, BoardsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    DragDropModule\r\n  ]\r\n})\r\nexport class DashboardModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatCardModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatCardModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","export enum USER_ROLE {\r\n  ADMIN = \"ADMIN\",\r\n  USER = \"USER\"\r\n}\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  role: USER_ROLE;\r\n  lastLoginTime: Date;\r\n  createdAt: Date;\r\n\r\n  token?: string;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AdminService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createUser(data: User) {\r\n    return this.http.post<User>(\"admin/add-user\", data);\r\n  }\r\n}\r\n","import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport const CUSTOM_VALIDATORS = {\r\n  upperAndLowerLetters: (control: AbstractControl) =>\r\n    control.value !== control.value.toUpperCase() &&\r\n    control.value !== control.value.toLowerCase()\r\n      ? null\r\n      : { noUpperAndLowerCase: { value: control.value } },\r\n\r\n  atLeastOneNumber: (control: AbstractControl) =>\r\n    /\\d/.test(control.value) ? null : { noNumbers: { value: control.value } }\r\n};\r\n"]}