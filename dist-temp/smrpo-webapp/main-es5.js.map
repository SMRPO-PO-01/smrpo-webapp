{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/interceptors/http-request.interceptor.ts","webpack:///src/app/resolvers/auth.resolver.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/store/root.store.ts","webpack:///src/app/store/user.store.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","AuthModule","_","DashboardModule","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","providers","AppComponent","selector","template","AppModule","provide","useClass","multi","declarations","bootstrap","AuthGuard","router","userService","getMe","pipe","navigate","HttpRequestInterceptor","rootStore","next","clone","url","apiUrl","charAt","token","userStore","authToken","headers","set","handle","err","status","clearSettings","body","error","AuthResolver","UserService","http","get","user","setUser","providedIn","RootStore","UserStore","_user","localStorage","clear","_authToken","asObservable","value","getItem","setItem","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AuthResolver } from './resolvers/auth.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"auth\",\r\n    loadChildren: () => import(\"./auth/auth.module\").then(m => m.AuthModule),\r\n    resolve: { _: AuthResolver }\r\n  },\r\n  {\r\n    path: \"dashboard\",\r\n    loadChildren: () =>\r\n      import(\"./dashboard/dashboard.module\").then(m => m.DashboardModule),\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: \"**\", redirectTo: \"/dashboard\", pathMatch: \"full\" }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  providers: [AuthResolver, AuthGuard],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  template: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class AppComponent {}\r\n","import { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HttpRequestInterceptor } from \"./interceptors/http-request.interceptor\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpRequestInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private userService: UserService) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.userService.getMe().pipe(\r\n      map(() => true),\r\n      catchError(() => {\r\n        this.router.navigate([\"/auth/login\"]);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { catchError } from 'rxjs/internal/operators/catchError';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { RootStore } from '../store/root.store';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router, private rootStore: RootStore) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // prepend API_URL to request url\r\n    req = req.clone({\r\n      url:\r\n        environment.apiUrl +\r\n        (req.url.charAt(0) === \"/\" ? req.url : `/${req.url}`)\r\n    });\r\n\r\n    // add authorization token to request header\r\n    const token = this.rootStore.userStore.authToken;\r\n    if (token)\r\n      req = req.clone({\r\n        headers: req.headers.set(\"Authorization\", `Bearer ${token}`)\r\n      });\r\n\r\n    // if response status 401, redirect to auth\r\n    return next.handle(req).pipe(\r\n      catchError(err => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          if (err.status === 401) {\r\n            this.rootStore.userStore.clearSettings();\r\n            this.router.navigate([\"/auth/login\"]);\r\n          }\r\n          return throwError({\r\n            status: err.status,\r\n            body: err.error\r\n          });\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router } from '@angular/router';\r\n\r\nimport { RootStore } from '../store/root.store';\r\n\r\n@Injectable()\r\nexport class AuthResolver implements Resolve<void> {\r\n  constructor(private rootStore: RootStore, private router: Router) {}\r\n\r\n  resolve() {\r\n    if (this.rootStore.userStore.authToken) {\r\n      this.router.navigate([\"/dashboard\"]);\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { User } from '../interfaces/user.interface';\r\nimport { RootStore } from '../store/root.store';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient, private rootStore: RootStore) {}\r\n\r\n  getMe() {\r\n    return this.http\r\n      .get<User>(\"user/me\")\r\n      .pipe(tap(user => this.rootStore.userStore.setUser(user)));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { UserStore } from './user.store';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class RootStore {\r\n  readonly userStore = new UserStore();\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\n\r\nimport { User } from '../interfaces/user.interface';\r\n\r\nexport class UserStore {\r\n  private _authToken: string;\r\n\r\n  private _user = new BehaviorSubject<User>(null);\r\n  get user$() {\r\n    return this._user.asObservable();\r\n  }\r\n  get user() {\r\n    return this._user.value;\r\n  }\r\n\r\n  get authToken() {\r\n    if (!this._authToken) {\r\n      this._authToken = localStorage.getItem(\"authToken\");\r\n    }\r\n    return this._authToken;\r\n  }\r\n  set authToken(token: string) {\r\n    this._authToken = token;\r\n    localStorage.setItem(\"authToken\", token);\r\n  }\r\n\r\n  clearSettings() {\r\n    localStorage.clear();\r\n    delete this._authToken;\r\n  }\r\n\r\n  setUser(user: User) {\r\n    this._user.next(user);\r\n    if (user.token) {\r\n      this.authToken = user.token;\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://34.89.241.244:3000\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}